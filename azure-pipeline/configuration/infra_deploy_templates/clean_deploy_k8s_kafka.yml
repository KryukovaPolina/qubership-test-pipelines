|
  global='
  name: kafka
  waitForPodsReady: true
  podReadinessTimeout: 300
  monitoringType: prometheus
  installDashboard: true
  secrets:
    kafka:
      disableSecurity: false
      adminUsername: admin
      adminPassword: ''
      clientUsername: client
      clientPassword: ''
      zookeeperClientUsername: zclient
      zookeeperClientPassword: ''
    monitoring:
      prometheusUsername: prometheus
      prometheusPassword: ''
      smDbPassword: admin
      smDbUsername: admin
    akhq:
      defaultUsername: admin
      defaultPassword: admin
    backupDaemon:
      username: admin
      password: ''
  ';
  operator='
  replicas: 1
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: ''
                operator: In
                values:
                  - kafka-service-operator
          topologyKey: kubernetes.io/hostname
  ';
  kafka='
  install: true
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: ''
                operator: In
                values:
                  - kafka
          topologyKey: kubernetes.io/hostname
  disableSecurity: false
  enableAuthorization: true
  tokenRolesPath: scope
  heapSize: 256
  replicas: 3
  resources:
    requests:
      cpu: 50m
      memory: 200Mi
    limits:
      cpu: 399m
      memory: 600Mi
  securityContext:
    runAsUser: 1000
    fsGroup: 1000
  storage:
    size: 1Gi
    className:
      - default
  terminationGracePeriod: 180
  rollbackTimeout: 3600
  zookeeperConnect: zookeeper.zookeeper-service:2181
  ';
  monitoring='
  install: true
  lagExporter:
    enabled: true
    pollIntervalSeconds: 30
    kafkaClientTimeoutSeconds: 65
    kafkaRetries: 6
    cluster:
      name: kafka
  affinity:
    podAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: ''
                  operator: In
                  values:
                    - kafka
            topologyKey: kubernetes.io/hostname
          weight: 100
  tolerations:
    - key: ''
      operator: Equal
      value: value2
      effect: NoExecute
      tolerationSeconds: 3600
  kafkaZookeeperChRoot: zookeeper.zookeeper-service:2181
  jolokiaPort: 9087
  kafkaMeasurementPrefixName: kafka_
  kafkaTotalBrokerCount: 3
  securityContext:
    runAsUser: 1000
    fsGroup: 1000
  monitoringCoreosGroup: false
  ';
  akhq='
  install: true
  affinity:
    podAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: ''
                  operator: In
                  values:
                    - kafka
            topologyKey: kubernetes.io/hostname
          weight: 100
  tolerations:
    - key: ''
      operator: Equal
      value: value3
      effect: NoExecute
      tolerationSeconds: 3600
  kafkaPollTimeout: 10000
  enableAccessLog: false
  securityContext:
    fsGroup: 1000
    runAsUser: 1000
  ';
  backupDaemon='
  install: true
  storage: 1Gi
  storageClass: azurefile-csi-nfs
  backupSchedule: 0 0 * * *
  evictionPolicy: 0/1d,7d/delete
  securityContext:
    fsGroup: 1000
    runAsUser: 1000
  ';
  integrationTests='
  install: true
  service:
    name: kafka-integration-tests-runner
  waitForResult: true
  timeout: 3000
  tags: kafka_crud
  kafkaIsManagedByOperator: true
  zookeeperOsProject: zookeeper-service
  zookeeperHost: zookeeper
  zookeeperPort: 2181
  kafkaHost: kafka
  kafkaPort: 9092
  kafkaPvNames: pv-kafka-1,pv-kafka-2,pv-kafka-3
  kafkaVolumeSize: "1"
  backupDaemonHost: kafka-backup-daemon
  backupDaemonPort: 8080
  resources:
    requests:
      memory: 255Mi
      cpu: 150m
    limits:
      memory: 256Mi
      cpu: 400m
  ';
  
  ESCAPE_SEQUENCE=true;
