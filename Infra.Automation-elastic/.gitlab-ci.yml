# [Opensearch] Regression sprint pipeline R2024.4 Sprint 1 (qa_kubernetes)
variables:
  PYTHON_IMAGE: pipe_image_latest
  KUBECTL: /builds/PROD.Platform.HA/Infra.Automation/binary/kubectl
  JOB_NAME_CLEAN: ''
  JOB_NAME_UPDATE: ''
  DEPLOY_SCRIPT: /scripts/external_platform_library_builtIn/deploy\_with\_deployer.py
  DEPLOY_SCRIPT_DP: /scripts/external_platform_library_builtIn/deploy_with_helmdeployer.py
  PATCH_SCRIPT: /scripts/external_platform_library_builtIn/patch_ns_restricted.py
  UPGRADE_CRD_SCRIPT: /scripts/external_platform_library_builtIn/upgrade_crd.py
  APPLY_RESOURCES_SCRIPT: /scripts/external_platform_library_builtIn/prepare_restricted_resources.py
  CLEAN_NS_SCRIPT: /scripts/external_platform_library_builtIn/clean_namespace.py
  DP_USER: ''
  DP_PASS: ''
  CLOUD_HOST: ${QA_KUBER_HOST}
  CLOUD_TOKEN: ${QA_KUBER_TOKEN}
  REPOSITORY_URL: ''
  ### ----------------------------------- Cloud specific configuration ----------------------------------- ###
  ### ----------------------------------- ocp_cert_1 configuration --------------------------------------- ###
  # PREFIX: ocp_cert_1
  # JENKINS_URL: ''
  # JENKINS_USER: ''
  # JENKINS_PASS: ''
  # CREDS_IN_DEPLOYER: ''
  # RESTRICTED_USER_APP: ''
  # CLOUD_HOST_OVERALL: ${OCP_CERT_1_HOST}
  # CLOUD_TOKEN_OVERALL: ${OCP_CERT_1_TOKEN}
  # PROJECT: opensearch
  # KUBECONFIG: $OCP_CERT_1_KUBECONFIG
  ### ----------------------------------- platcert01 configuration ----------------------------------- ###
  #  PREFIX: platcert01
  #  JENKINS_URL: ''
  #  JENKINS_USER: ''
  #  JENKINS_PASS: ''
  #  CREDS_IN_DEPLOYER: ''
  #  RESTRICTED_USER_APP: ''
  #  CLOUD_HOST_OVERALL: ${PLATCERT01_HOST}
  #  CLOUD_TOKEN_OVERALL: ${PLATCERT01_TOKEN_ADMIN}
  #  PROJECT: opensearch
  ### ----------------------------------- qa_kubernetes configuration ----------------------------------- ###
  PREFIX: qa_kubernetes
  JENKINS_URL: ''
  JENKINS_USER: ''
  JENKINS_PASS: ''
  CREDS_IN_DEPLOYER: ''
  RESTRICTED_USER_APP: ''
  #PREFIX: ocp_cert_1
  #PREFIX: platcert01
  CLOUD_HOST_OVERALL: ${QA_KUBER_HOST}
  CLOUD_TOKEN_OVERALL: ${QA_KUBER_TOKEN}
  PROJECT: opensearch
  KUBECONFIG: $QA_KUBER_KUBECONFIG
  ### ------------------------------------------- Manifests --------------------------------------------- ###
  LATEST_SPRINT: ''
  PREVIOUS_SPRINT: ''
  N1_RELEASE: ''
  N2_RELEASE: ''
  # LATEST_SPRINT: ''
  # PREVIOUS_SPRINT: ''
  # N1_RELEASE: ''
  # N2_RELEASE: ''
  PREVIOUS_3PARTY: ''
  DEPLOY_SCHEME: full # basic or full
  LATEST_SPRINT_TAG: ''
  PREVIOUS_SPRINT_TAG: ''

stages:
  - clean_latest_sprint_infra_passport
  - clean_previous_sprint_s3
  - upgrade_from_previous_sprint_to_latest_sprint_s3
  - clean_n1_release_s3
  - upgrade_from_n1_release_to_latest_sprint_s3
  - clean_n2_release_s3
  - upgrade_from_n2_release_to_latest_sprint_s3
  - clean_latest_sprint_s3_separate
  - clean_latest_sprint_s3_separate_arbiter
  - upgrade_latest_sprint_s3_separate_arbiter_change_resources_full-at
  - clean_latest_sprint_w/o_components
  - upgrade_latest_sprint_all_components_s3
  - clean_latest_sprint_s3_drd_tls-secrets
  - upgrade_latest_sprint_s3_drd_tls-certs
  - clean_latest_sprint_s3_drd_tls
  - clean_latest_sprint_s3
  - upgrade_latest_sprint_from_non-tls_to_tls_s3
  - clean_latest_sprint_s3_tls
  - clean_latest_sprint_nfs
  - clean_latest_sprint_s3_custom_creds
  - clean_previous_3party_s3
  - migration_from_previous_3party_to_latest_sprint_s3
  - clean_previous_3party_s3_pv
  - migration_from_previous_3party_to_latest_sprint_s3_pv
  - clean_previous_sprint_s3_pv
  - upgrade_from_previous_sprint_to_latest_sprint_s3_pv
  - clean_previous_sprint_s3_restricted
  - upgrade_from_previous_sprint_to_latest_sprint_s3_restricted
  - clean_latest_sprint_s3_restricted
  - clean_latest_sprint_s3_pv
  - upgrade_latest_sprint_s3_pv_full-at_custom-labels
  - create_report


default:
  before_script:
    - pip config set global.index-url qubership.org/api/pypi/pypi_python_org.pypi.proxy/simple
    - pip config set global.trusted-host dockerhub.qubership.org
    - python3 -m pip install --upgrade pip
    - pip install --no-cache-dir -r requirements.txt
    - apk add openssh-client --update-cache --repository ${REPOSITORY_URL} --allow-untrusted
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - chmod +x $KUBECTL
    - echo "$KUBECONFIG" > kubeconfig.env
    - export KUBECONFIG=/builds/PROD.Platform.HA/Infra.Automation/kubeconfig.env


include:
  - project: 'PROD.Platform.HA/Infra.Automation'
    ref: pipe_image
    file: 'api2.yaml'

.test-case: &test-case
  image: ${PYTHON_IMAGE}
  extends: .check_state_logs_script.run
  variables:
    CLOUD_HOST: ${CLOUD_HOST_OVERALL}
    CLOUD_TOKEN: ${CLOUD_TOKEN_OVERALL}
    ARRAY_NS: ${PROJECT}
    ALLOWED_RESTARTS_AMOUNT: 8
    ALLOWED_ERROR_LOGS_AMOUNT: 400
  tags:
    - ''
  allow_failure: true
  when: on_success
  # when: manual

.clear_namespace: &clear_namespace
  - python3 "$CLEAN_NS_SCRIPT" --cloud-token="${CLOUD_TOKEN}" --cloud-host="$CLOUD_HOST" --cloud-namespace="$PROJECT" --pv-list="opensearch-pv-1,opensearch-pv-2,opensearch-pv-3,pv-nfs-opensearch-backup-1" --cr-list="opensearchservices"
  - ssh -o StrictHostKeyChecking=no ubuntu@***.***.***.*** "sudo su; sudo rm -rf /mnt/data/opensearch-pv-1/*; echo 'PV opensearch-pv-1 is cleaned'; ls -l /mnt/data/opensearch-pv-1/"
  - ssh -o StrictHostKeyChecking=no ubuntu@***.***.***.*** "sudo su; sudo rm -rf /mnt/data/opensearch-pv-2/*; echo 'PV opensearch-pv-2 is cleaned'; ls -l /mnt/data/opensearch-pv-2/"
  - ssh -o StrictHostKeyChecking=no ubuntu@***.***.***.*** "sudo su; sudo rm -rf /mnt/data/opensearch-pv-3/*; echo 'PV opensearch-pv-3 is cleaned'; ls -l /mnt/data/opensearch-pv-3/"

1-Clean [LATEST_SPRINT] Infra passport parameters:
  <<: *test-case
  stage: clean_latest_sprint_infra_passport
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates-example/opensearch/${PREFIX}/opensearch_infra_passport.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${PREVIOUS_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"

2-Clean [PREVIOUS_SPRINT] S3:
  <<: *test-case
  stage: clean_previous_sprint_s3
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates-example/opensearch/${PREFIX}/opensearch_clean_install_APP_k8s_Storage_class.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${PREVIOUS_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"

3-Upgrade From [PREVIOUS_SPRINT] To [LATEST_SPRINT] S3:
  <<: *test-case
  stage: upgrade_from_previous_sprint_to_latest_sprint_s3
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates-example/opensearch/${PREFIX}/opensearch_update_APP_k8s_Storage_class.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - !reference [.template_job_status, script]

# Releases
4-Clean [N1_RELEASE] S3:
  <<: *test-case
  stage: clean_n1_release_s3
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates-example/opensearch/${PREFIX}/opensearch_clean_install_APP_k8s_Storage_class.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${N1_RELEASE}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"

5-Upgrade From [N1_RELEASE] To [LATEST_SPRINT] S3:
  <<: *test-case
  stage: upgrade_from_n1_release_to_latest_sprint_s3
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates-example/opensearch/${PREFIX}/opensearch_update_APP_k8s_Storage_class.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - !reference [.template_job_status, script]

6-Clean [N2_RELEASE] S3:
  <<: *test-case
  stage: clean_n2_release_s3
  script:
    - python3 ${PATCH_SCRIPT} --cloud-token="${CLOUD_TOKEN}" --cloud-host="${CLOUD_HOST}" --namespace="${PROJECT}" --label="add"
    - python3 "${DEPLOY_SCRIPT}" -f "./templates-example/opensearch/${PREFIX}/opensearch_clean_install_APP_k8s_Storage_class.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${N2_RELEASE}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - python3 ${PATCH_SCRIPT} --cloud-token="${CLOUD_TOKEN}" --cloud-host="${CLOUD_HOST}" --namespace="${PROJECT}" --label="remove"
  only: { variables: [ $DEPLOY_SCHEME == "full" ] }

7-Upgrade From [N2_RELEASE] To [LATEST_SPRINT] S3:
  <<: *test-case
  stage: upgrade_from_n2_release_to_latest_sprint_s3
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates-example/opensearch/${PREFIX}/opensearch_update_APP_k8s_Storage_class.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - !reference [.template_job_status, script]
  only: { variables: [ $DEPLOY_SCHEME == "full" ] }

# Separate
8-Clean [LATEST_SPRINT] S3 Separate:
  <<: *test-case
  stage: clean_latest_sprint_s3_separate
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates-example/opensearch/${PREFIX}/opensearch_clean_APP_k8s_Separate.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    # - !reference [.template_job_status, script]

9-Clean [LATEST_SPRINT] S3 Separate Arbiter:
  <<: *test-case
  stage: clean_latest_sprint_s3_separate_arbiter
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates-example/opensearch/${PREFIX}/opensearch_clean_APP_k8s_Separate_Arbiter.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - !reference [.template_job_status, script]

10-Upgrade [LATEST_SPRINT] S3 Separate Arbiter Change Resources Full-AT:
  <<: *test-case
  stage: upgrade_latest_sprint_s3_separate_arbiter_change_resources_full-at
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates-example/opensearch/${PREFIX}/opensearch_update_APP_k8s_Separate_Arbiter.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - !reference [.template_job_status, script]

11-Clean [LATEST_SPRINT] W/O Components:
  <<: *test-case
  stage: clean_latest_sprint_w/o_components
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates-example/opensearch/${PREFIX}/clean_app_minimal.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - !reference [.template_job_status, script]
  only: { variables: [ $DEPLOY_SCHEME == "full" ] }

12-Upgrade [LATEST_SPRINT] All components S3:
  <<: *test-case
  stage: upgrade_latest_sprint_all_components_s3
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates-example/opensearch/${PREFIX}/opensearch_clean_install_APP_k8s_Storage_class.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - !reference [.template_job_status, script]
  only: { variables: [ $DEPLOY_SCHEME == "full" ] }

13-Clean [LATEST_SPRINT] S3 DRD TLS-secrets:
  <<: *test-case
  stage: clean_latest_sprint_s3_drd_tls-secrets
  script:
    - *clear_namespace
    - $KUBECTL create -f ./resources/opensearch_tls_secret.yml -n ${PROJECT} || true
    - python3 "${DEPLOY_SCRIPT}" -f "./templates-example/opensearch/${PREFIX}/Clean_DRD_TLS_secrets.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update" --request-type="post"
    - !reference [.template_job_status, script]
  only: { variables: [ $DEPLOY_SCHEME == "full" ] }

14-Upgrade [LATEST_SPRINT] S3 DRD TLS-Certs:
  <<: *test-case
  stage: upgrade_latest_sprint_s3_drd_tls-certs
  script:
    - $KUBECTL delete secrets opensearch-admin-issuer-certs opensearch-transport-issuer-certs opensearch-rest-issuer-certs opensearch-curator-tls-secret opensearch-drd-tls-secret -n ${PROJECT} || true
    - python3 "${DEPLOY_SCRIPT}" -f "./templates-example/opensearch/${PREFIX}/Update_DRD_TLS_certs.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update" --request-type="post"
    - !reference [.template_job_status, script]
  only: { variables: [ $DEPLOY_SCHEME == "full" ] }

# TLS
15-Clean [LATEST_SPRINT] S3 DRD TLS:
  <<: *test-case
  stage: clean_latest_sprint_s3_drd_tls
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates-example/opensearch/${PREFIX}/APP_SC_drd_s3_TLS.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - !reference [.template_job_status, script]

16-Clean [LATEST_SPRINT] S3:
  <<: *test-case
  stage: clean_latest_sprint_s3
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates-example/opensearch/${PREFIX}/opensearch_clean_install_APP_k8s_Storage_class.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - !reference [.template_job_status, script]
  only: { variables: [ $DEPLOY_SCHEME == "full" ] }

17-Upgrade [LATEST_SPRINT] From Non-TLS To TLS S3:
  <<: *test-case
  stage: upgrade_latest_sprint_from_non-tls_to_tls_s3
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates-example/opensearch/${PREFIX}/clean_app_tls.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
  only: { variables: [ $DEPLOY_SCHEME == "full" ] }

18-Clean [LATEST_SPRINT] S3 TLS:
  <<: *test-case
  stage: clean_latest_sprint_s3_tls
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates-example/opensearch/${PREFIX}/clean_app_tls.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - !reference [.template_job_status, script]
  only: { variables: [ $DEPLOY_SCHEME == "full" ] }

19-Clean [LATEST_SPRINT] NFS:
  <<: *test-case
  stage: clean_latest_sprint_nfs
  script:
    - *clear_namespace
    - python3 "${DEPLOY_SCRIPT}" -f "./templates-example/opensearch/${PREFIX}/app_clean_sc_nfs.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - !reference [.template_job_status, script]

20-Clean [LATEST_SPRINT] S3 Custom Creds:
  <<: *test-case
  stage: clean_latest_sprint_s3_custom_creds
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates-example/opensearch/${PREFIX}/clean_app_not_default_creds.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - !reference [.template_job_status, script]
  only: { variables: [ $DEPLOY_SCHEME == "full" ] }

21-Clean [PREVIOUS_3PARTY] S3:
  <<: *test-case
  stage: clean_previous_3party_s3
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates-example/opensearch/${PREFIX}/opensearch_clean_install_APP_k8s_Storage_class.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${PREVIOUS_3PARTY}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
  only: { variables: [ $PREVIOUS_3PARTY != "" ] }

22-Migration From [PREVIOUS_3PARTY] To [LATEST_SPRINT] S3:
  <<: *test-case
  stage: migration_from_previous_3party_to_latest_sprint_s3
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates-example/opensearch/${PREFIX}/opensearch_clean_install_APP_k8s_Storage_class.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - !reference [.template_job_status, script]
  only: { variables: [ $PREVIOUS_3PARTY != "" ] }

23-Clean [PREVIOUS_3PARTY] S3 PV:
  <<: *test-case
  stage: clean_previous_3party_s3_pv
  script:
    - *clear_namespace
    - python3 "${DEPLOY_SCRIPT}" -f "./templates-example/opensearch/${PREFIX}/opensearch_clean_install_APP_k8s.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${PREVIOUS_3PARTY}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
  only: { variables: [ $PREVIOUS_3PARTY != "" ] }

24-Migration From [PREVIOUS_3PARTY] To [LATEST_SPRINT] S3 PV:
  <<: *test-case
  stage: migration_from_previous_3party_to_latest_sprint_s3_pv
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates-example/opensearch/${PREFIX}/opensearch_update_APP_k8s.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - !reference [.template_job_status, script]
  only: { variables: [ $PREVIOUS_3PARTY != "" ] }

25-Clean [PREVIOUS_SPRINT] S3 PV:
  <<: *test-case
  stage: clean_previous_sprint_s3_pv
  script:
    - *clear_namespace
    - python3 "${DEPLOY_SCRIPT}" -f "./templates-example/opensearch/${PREFIX}/opensearch_clean_install_APP_k8s.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${PREVIOUS_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
  only: { variables: [ $DEPLOY_SCHEME == "full" ] }

26-Upgrade From [PREVIOUS_SPRINT] To [LATEST_SPRINT] S3 PV:
  <<: *test-case
  stage: upgrade_from_previous_sprint_to_latest_sprint_s3_pv
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates-example/opensearch/${PREFIX}/opensearch_update_APP_k8s.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - !reference [.template_job_status, script]
  only: { variables: [ $DEPLOY_SCHEME == "full" ] }

# Restricted
27-Clean [PREVIOUS_SPRINT] S3 Restricted:
  <<: *test-case
  stage: clean_previous_sprint_s3_restricted
  script:
    - *clear_namespace
    - python3 "${APPLY_RESOURCES_SCRIPT}" --cloud-host="${CLOUD_HOST}" --cloud-token="${CLOUD_TOKEN}" --namespace="${PROJECT}" --crd-tag="${PREVIOUS_SPRINT_TAG}" --service="opensearch"
    - python3 "${DEPLOY_SCRIPT}" -f "./templates-example/opensearch/${PREFIX}/opensearch_restricted_storage_class.yaml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${RESTRICTED_USER_APP}" --artifact="${PREVIOUS_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
  only: { variables: [ $RESTRICTED_USER_APP != "" ] }

28-Upgrade From [PREVIOUS_SPRINT] To [LATEST_SPRINT] S3 Restricted:
  <<: *test-case
  stage: upgrade_from_previous_sprint_to_latest_sprint_s3_restricted
  script:
    - python3 "${UPGRADE_CRD_SCRIPT}" --cloud-host="${CLOUD_HOST}" --cloud-token="${CLOUD_TOKEN}" --crd-tag="${LATEST_SPRINT_TAG}" --service="opensearch"
    - python3 "${DEPLOY_SCRIPT}" -f "./templates-example/opensearch/${PREFIX}/opensearch_restricted_storage_class.yaml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${RESTRICTED_USER_APP}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - !reference [.template_job_status, script]
  only: { variables: [ $RESTRICTED_USER_APP != "" ] }

29-Clean [LATEST_SPRINT] S3 Restricted:
  <<: *test-case
  stage: clean_latest_sprint_s3_restricted
  script:
    - python3 "${CLEAN_NS_SCRIPT}" --cloud-token="${CLOUD_TOKEN}" --cloud-host="${CLOUD_HOST}" --cloud-namespace="${PROJECT}" --pv-list="opensearch-pv-1,opensearch-pv-2,opensearch-pv-3,pv-nfs-opensearch-backup-1" --cr-list="opensearchservices"
    - python3 "${APPLY_RESOURCES_SCRIPT}" --cloud-host="${CLOUD_HOST}" --cloud-token="${CLOUD_TOKEN}" --namespace="${PROJECT}" --crd-tag="${LATEST_SPRINT_TAG}" --service="opensearch"
    - python3 "${DEPLOY_SCRIPT}" -f "./templates-example/opensearch/${PREFIX}/opensearch_restricted_storage_class.yaml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${RESTRICTED_USER_APP}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - !reference [.template_job_status, script]
  only: { variables: [ $RESTRICTED_USER_APP != "" ] }

30-Clean [LATEST_SPRINT] S3 PV:
  <<: *test-case
  stage: clean_latest_sprint_s3_pv
  script:
    - *clear_namespace
    - python3 "${DEPLOY_SCRIPT}" -f "./templates-example/opensearch/${PREFIX}/opensearch_clean_install_APP_k8s.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - !reference [.template_job_status, script]

31-Upgrade [LATEST_SPRINT] S3 PV Full-AT Custom-labels:
  <<: *test-case
  stage: upgrade_latest_sprint_s3_pv_full-at_custom-labels
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates-example/opensearch/${PREFIX}/opensearch_update_APP_full_tests_k8s.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - !reference [.template_job_status, script]

Report:
  image: ${PYTHON_IMAGE}
  tags:
    - ''
  when: manual
  stage: create_report
  script:
    - python3 ${REPORT_SCRIPT} --pipeline_id="${CI_PIPELINE_ID}" --token="${GIT_TOKEN}" --webex-room-id="${WEBEX_CI_ROOM_ID}" --webex-token="${WEBEX_CI_TOKEN}" --versions="LATEST_SPRINT=${LATEST_SPRINT},PREVIOUS_SPRINT=${PREVIOUS_SPRINT},N1_RELEASE=${N1_RELEASE},N2_RELEASE=${N2_RELEASE}"
  artifacts:
    paths:
      - "*.html"

