|
  CUSTOM_RESOURCE_NAME=kafka;
  
  ENABLE_MIGRATION=true;
  ESCAPE_SEQUENCE=true;
  global= '
    skipNamespaceValidation: true
    waitForPodsReady: true
    secrets:
      kafka:
        disableSecurity: false
        adminUsername: admin
        adminPassword: ''
        clientUsername: client
        clientPassword: ''
        zookeeperClientUsername: zclient
        zookeeperClientPassword: ''
      monitoring:
        prometheusUsername: prometheus
        prometheusPassword: ''
      akhq:
        defaultUsername: admin
        defaultPassword: admin
      backupDaemon:
        username: admin
        password: ''
        s3:
          keyId: ''
          keySecret: ''
  ';
  operator='
    replicas: 1
    resources:
      requests:
        memory: 128Mi
        cpu: 25m
      limits:
        memory: 128Mi
        cpu: 100m
  ';
  kafka='
    install: true
    heapSize: 256
    replicas: 3
    resources:
      requests:
        cpu: 50m
        memory: 350Mi
      limits:
        cpu: 500m
        memory: 800Mi
    securityContext:
      fsGroup: 1000
    storage:
      size: 5Gi
      className:
        - csi-cinder-sc-delete
    zookeeperConnect: zookeeper.zookeeper-service:2181/znode
    zookeeperEnableSsl: false
    ccMetricReporterEnabled: false
    kraft:
      enabled: true
  ';
  cruiseControl='
    install: true
    ingress:
      host: cc-kafka-service.apps.ocp-cert-1.openshift.sdntest.qubership.org
    ui:
      enabled: true
  ';
  monitoring='
    install: true
    serviceMonitor:
      jmxScrapeTimeout: 30s
    securityContext:
      runAsUser: 1000
    resources:
      requests:
        memory: 128Mi
        cpu: 100m
      limits:
        memory: 256Mi
        cpu: 200m
  ';
  akhq='
    install: true
    ingress:
      host: akhq-kafka-service.apps.ocp-cert-1.openshift.sdntest.qubership.org
    securityContext:
      runAsUser: 1000
    resources:
      requests:
        memory: 256Mi
        cpu: 200m
      limits:
        memory: 256Mi
        cpu: 400m
    kafkaPollTimeout: 10000
    enableAccessLog: false
  ';
  backupDaemon='
    install: true
    backupSchedule: "*/15 * * * *"
    s3:
      enabled: true
      url: http://test-minio-gateway-nas.qa-kubernetes.openshift.sdntest.qubership.org/
      bucket: kafka-ocp-backup
  ';
  integrationTests='
    install: true
    service:
      name: kafka-integration-tests-runner
    waitForResult: true
    timeout: 3000
    tags: kafkaNOTkafka_haORkafka_images
    prometheusUrl: https://prometheus.apps.ocp-cert-1.openshift.sdntest.qubership.org
    url:  https://console-openshift-console.apps.ocp-cert-1.openshift.sdntest.qubership.org:8443
  ';
