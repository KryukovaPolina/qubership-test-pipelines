name: Monitoring Tests

on:
  workflow_call:
    inputs:
      service_branch:
        required: false
        type: string
      versions_file:
        description: 'Path to versions list file'
        type: string
        required: true
      pipeline_branch:
        description: 'Test pipeline branch name'
        type: string
        required: true
      runner_type:
        description: 'Runner type (self-hosted or ubuntu-latest)'
        type: string
        required: false
        default: 'ubuntu-latest'

jobs:
#  prepare-versions:
#    runs-on: ${{inputs.runner_type}}
#    outputs:
#      versions: ${{steps.process-versions.outputs.versions}}
#      previous_version: ${{steps.process-versions.outputs.previous_version}}
#    steps:
#      - name: Checkout repo
#        uses: actions/checkout@v4
#        with:
#          ref: '${{inputs.service_branch}}'
#          repository: 'Netcracker/qubership-monitoring-operator'
#          path: 'qubership-monitoring-operator'
#      - name: Process versions file
#        id: process-versions
#        # language=bash
#        run: |
#          versions_str=$(cat qubership-monitoring-operator/${{inputs.versions_file}})
#          versions_json=$(echo $versions_str | jq -R -s -c 'split(" ")')
#          echo "versions=$versions_json" >> $GITHUB_OUTPUT
#          previous_version=$(echo "$versions_json" | jq -r '.[-1]')
#          echo "previous_version=$previous_version" >> $GITHUB_OUTPUT

  #1)
  #1-VmClean[PREVIOUS_SPRINT], 2-VmUpgradeFrom[PREVIOUS_SPRINT]To[LATEST_SPRINT]
  #5-VmClean[N1_RELEASE], 6-VmUpgradeFrom[N1_RELEASE]To[LATEST_SPRINT],
  #7-VmClean[N2_RELEASE], 8-VmUpgradeFrom[N2_RELEASE]To[LATEST_SPRINT]
  #vm_with_smoke_at.yml
#  Clean-Previous-Update-To-Latest:
#    name: Clean [PREVIOUS], Update to [LATEST]
#    needs: prepare-versions
#    runs-on: ${{inputs.runner_type}}
#    strategy:
#      matrix:
#        release: ${{fromJson(needs.prepare-versions.outputs.versions)}}
#    steps:
#      - name: Checkout pipeline
#        uses: actions/checkout@v4
#        with:
#          ref: '${{inputs.pipeline_branch}}'
#          repository: 'Netcracker/qubership-test-pipelines'
#          path: 'qubership-test-pipelines'
#      - name: Create cluster
#        uses: ./qubership-test-pipelines/actions/shared/create_cluster
#      - name: Clean Install Monitoring [PREVIOUS]
#        uses: ./qubership-test-pipelines/actions/monitoring/helm_deploy_monitoring
#        with:
#          path_to_template: 'templates/monitoring/vm_with_smoke_at.yml'
#          service_branch: '${{matrix.release}}'
#      - name: Verify Monitoring installation
#        uses: ./qubership-test-pipelines/actions/monitoring/verify_installation_monitoring
#        with:
#          service_branch: '${{matrix.release}}'
#      - name: Update Monitoring to [LATEST]
#        uses: ./qubership-test-pipelines/actions/monitoring/helm_deploy_monitoring
#        with:
#          deploy_mode: upgrade
#          path_to_template: 'templates/monitoring/vm_with_smoke_at.yml'
#          service_branch: '${{inputs.service_branch}}'
#      - name: Verify installation
#        uses: ./qubership-test-pipelines/actions/monitoring/verify_installation_monitoring
#        with:
#          service_branch: ${{inputs.service_branch}}

  #2)
  #3-VmClean[LATEST_SPRINT], 4-VmUpgrade[LATEST_SPRINT]DiffParams
  #vm_with_full_at.yml? vm_with_change_params.yml
  #3-Clean [LATEST], 4-Upgrade [LATEST] Diff Params
  Clean-Latest-Upgrade-Diff-Params:
    runs-on: ${{inputs.runner_type}}
    name: Clean [LATEST], Upgrade [LATEST] Diff Params
    steps:
      - name: Checkout pipeline
        uses: actions/checkout@v4
        with:
          ref: '${{inputs.pipeline_branch}}'
          repository: 'Netcracker/qubership-test-pipelines'
          path: 'qubership-test-pipelines'
      - name: Create cluster
        uses: ./qubership-test-pipelines/actions/shared/create_cluster
      - name: Install Ingress Controller on cluster
        uses: ./qubership-test-pipelines/actions/shared/create_ingress
      - name: Install Monitoring [LATEST]
        uses: ./qubership-test-pipelines/actions/monitoring/helm_deploy_monitoring
        with:
          path_to_template: 'templates/monitoring/values.yml'
          #path_to_template: 'templates/monitoring/vm_with_smoke_at.yml'
          #path_to_template: 'templates/monitoring/vm_with_full_at.yml'
          service_branch: '${{inputs.service_branch}}'
      - name: Sleep
        run: sleep 2m
      - name: Port forwarding
        run: |
          kubectl port-forward -n monitoring service/grafana-service 3000:3000 &
          echo $! > /tmp/kubectl-port-forward.pid
          sleep 5
      - name: Get ingress
        run: kubectl get ingress -n monitoring monitoring-grafana -o jsonpath='{.spec.rules[0].host}'
      - name: Verify Monitoring installation
        uses: ./qubership-test-pipelines/actions/monitoring/verify_installation_monitoring
#      - name: Update to [LATEST] Version With Diff Params
#        uses: ./qubership-test-pipelines/actions/monitoring/helm_deploy_monitoring
#        with:
#          path_to_template: 'templates/monitoring/vm_with_change_params.yml'
#          service_branch: '${{inputs.service_branch}}'
#          deploy_mode: upgrade
#      - name: Sleep 1m
#        run: sleep 1m
#      - name: Verify Monitoring upgrade
#        uses: ./qubership-test-pipelines/actions/monitoring/verify_installation_monitoring
      - name: Stop port-forwarding
        if: always()
        run: |
          if [ -f /tmp/kubectl-port-forward.pid ]; then
            kill $(cat /tmp/kubectl-port-forward.pid) 2>/dev/null || true
          fi
  #3)
  #9-VmClean[PREVIOUS_SPRINT]Restricted, 10-VmUpgrade[LATEST_SPRINT]Restricted
  #vm_restricted_with_smoke_at
#  Clean-Previous-Upgrade-To-Latest-Restricted:
#    name: Clean [PREVIOUS] Restricted
#    needs: prepare-versions
#    runs-on: ${{inputs.runner_type}}
#    steps:
#      - name: Checkout pipeline
#        uses: actions/checkout@v4
#        with:
#          ref: '${{inputs.pipeline_branch}}'
#          repository: 'Netcracker/qubership-test-pipelines'
#          path: 'qubership-test-pipelines'
#      - name: Get version
#        run: echo ${{needs.prepare-versions.outputs.previous_version}}
#      - name: Create cluster
#        uses: ./qubership-test-pipelines/actions/shared/create_cluster
#      - name: Clean Install Monitoring [PREVIOUS] in Restricted mode
#        uses: ./qubership-test-pipelines/actions/monitoring/helm_deploy_monitoring
#        with:
#          restricted: true
#          path_to_template: 'templates/monitoring/vm_restricted_with_smoke_at.yml'
#          service_branch: '${{needs.prepare-versions.outputs.previous_version}}'
#      - name: Verify Monitoring installation
#        uses: ./qubership-test-pipelines/actions/monitoring/verify_installation_monitoring
#      - name: Update to [LATEST] Restricted
#        uses: ./qubership-test-pipelines/actions/monitoring/helm_deploy_monitoring
#        with:
#          restricted: true
#          deploy_mode: upgrade
#          path_to_template: 'templates/monitoring/vm_restricted_with_smoke_at.yml'
#          service_branch: '${{inputs.service_branch}}'
#      - name: Sleep 1m
#        run: sleep 1m
#      - name: Verify Monitoring upgrade
#        uses: ./qubership-test-pipelines/actions/monitoring/verify_installation_monitoring
#
#  #4)
#  #15-Vm Clean [LATEST_SPRINT] Restricted
#  #vm_restricted_with_smoke_at
#  Clean-Latest-Restricted:
#    name: Clean [LATEST] Restricted
#    runs-on: ${{inputs.runner_type}}
#    steps:
#      - name: Checkout pipeline
#        uses: actions/checkout@v4
#        with:
#          ref: '${{inputs.pipeline_branch}}'
#          repository: 'Netcracker/qubership-test-pipelines'
#          path: 'qubership-test-pipelines'
#      - name: Create cluster
#        uses: ./qubership-test-pipelines/actions/shared/create_cluster
#      - name: Clean Install Monitoring [LATEST] in Restricted mode
#        uses: ./qubership-test-pipelines/actions/monitoring/helm_deploy_monitoring
#        with:
#          restricted: true
#          path_to_template: 'templates/monitoring/vm_restricted_with_smoke_at.yml'
#          service_branch: '${{inputs.service_branch}}'
#      - name: Verify Monitoring installation
#        uses: ./qubership-test-pipelines/actions/monitoring/verify_installation_monitoring
#
#
#  #5)
#  #16-Clean[PREVIOUS_SPRINT]W/OComponents, 17-UpgradeTo[LATEST_SPRINT]W/OComponents
#  #no_components?
#
#  #6)
#  #37-VmCleanWithVmauth
#  #vm_without_vmauth
#  Clean-Latest-With-Vmauth:
#    runs-on: ${{inputs.runner_type}}
#    name: Clean [LATEST], Upgrade [LATEST] Diff Params
#    steps:
#      - name: Checkout pipeline
#        uses: actions/checkout@v4
#        with:
#          ref: '${{inputs.pipeline_branch}}'
#          repository: 'Netcracker/qubership-test-pipelines'
#          path: 'qubership-test-pipelines'
#      - name: Create cluster
#        uses: ./qubership-test-pipelines/actions/shared/create_cluster
#      - name: Install Monitoring [LATEST] without vmauth
#        uses: ./qubership-test-pipelines/actions/monitoring/helm_deploy_monitoring
#        with:
#          path_to_template: 'templates/monitoring/vm_without_vmauth.yml'
#          service_branch: '${{inputs.service_branch}}'
#      - name: Get PlatformMonitoring
#        run: kubectl get PlatformMonitoring platformmonitoring -n monitoring -o yaml
#      - name: Verify Monitoring installation
#        uses: ./qubership-test-pipelines/actions/monitoring/verify_installation_monitoring
