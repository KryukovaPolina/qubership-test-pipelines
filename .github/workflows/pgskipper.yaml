name: Pgskipper Tests

on:
  workflow_call:
    inputs:
      service_branch:
        required: false
        type: string
      versions_file:
        description: 'Path to versions list file'
        type: string
        required: true
      pipeline_branch:
        description: 'Test pipeline branch name'
        type: string
        required: true
      runner_type:
        description: 'Runner type (self-hosted or ubuntu-latest)'
        type: string
        required: false
        default: 'ubuntu-latest'
    secrets:
      AWS_S3_ACCESS_KEY_ID:
        required: true
      AWS_S3_ACCESS_KEY_SECRET:
        required: true

jobs:
#  prepare-versions:
#    runs-on: ${{inputs.runner_type}}
#    outputs:
#      versions: ${{steps.process-versions.outputs.versions}}
#      previous_version: ${{steps.process-versions.outputs.previous_version}}
#    steps:
#      - name: Checkout repo
#        uses: actions/checkout@v4
#        with:
#          ref: '${{inputs.service_branch}}'
#          repository: 'Netcracker/qubership-consul'
#          path: 'qubership-consul'
#      - name: Process versions file
#        id: process-versions
#        run: |
#          versions_str=$(cat qubership-consul/${{inputs.versions_file}})
#          versions_json=$(echo $versions_str | jq -R -s -c 'split(" ")')
#          echo "versions=$versions_json" >> $GITHUB_OUTPUT
#          previous_version=$(echo "$versions_json" | jq -r '.[-1]')
#          echo "previous_version=$previous_version" >> $GITHUB_OUTPUT

  # ---------- Current service branch ----------
  #4-Clean [LATEST_SPRINT], 5-Upgrade [LATEST_SPRINT] Diff Params
  Clean-Latest:
    runs-on: ${{inputs.runner_type}}
    name: Clean [LATEST]
    steps:
      - name: Checkout pipeline
        uses: actions/checkout@v4
        with:
          ref: '${{inputs.pipeline_branch}}'
          repository: 'Netcracker/qubership-test-pipelines'
          path: 'qubership-test-pipelines'
      - name: Create cluster
        uses: ./qubership-test-pipelines/actions/shared/create_cluster
      - name: Clean Install Pgskipper Core [LATEST]
        uses: ./qubership-test-pipelines/actions/pgskipper/helm_deploy_pgskipper_core
        with:
          path_to_template: 'templates/pgskipper/patroni-core-quickstart-sample.yaml'
          service_branch: '${{inputs.service_branch}}'
      - name: Verify Pgskipper installation
        uses: ./qubership-test-pipelines/actions/pgskipper/verify_installation_pgskipper_core
      - name: Clean Install Pgskipper Services [LATEST]
        uses: ./qubership-test-pipelines/actions/pgskipper/helm_deploy_pgskipper_services
        with:
          path_to_template: 'templates/pgskipper/patroni-services-quickstart-sample.yaml'
          service_branch: '${{inputs.service_branch}}'
      - name: Get logs
        run: |
          kubectl get events --sort-by=.metadata.creationTimestamp -n pgskipper
      - name: Verify Pgskipper installation
        uses: ./qubership-test-pipelines/actions/pgskipper/verify_installation_pgskipper_services
