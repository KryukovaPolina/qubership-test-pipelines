variables:
  PYTHON_IMAGE: pipe_image_latest
  JOB_NAME_CLEAN: ''
  JOB_NAME_UPDATE: ''
  DEPLOY_SCRIPT: /scripts/external_platform_library_builtIn/deploy\_with\_deployer.py
  CLEAN_NS_SCRIPT: /scripts/external_platform_library_builtIn/clean_namespace.py
  APPLY_RESOURCES_SCRIPT: /scripts/external_platform_library_builtIn/prepare_restricted_resources.py
  UPGRADE_CRD_SCRIPT: /scripts/external_platform_library_builtIn/upgrade_crd.py
  REPORT_SCRIPT: /scripts/external_platform_library_builtIn/report.py
  APP_NS: spark-apps
  ### ----------------------------------- Cloud specific configuration ----------------------------------- ###
  ### ----------------------------------- ocp_cert_1 configuration --------------------------------------- ###
  #  PREFIX: ocp_cert_1
  #  JENKINS_URL: ''
  #  JENKINS_USER: ''
  #  JENKINS_PASS: ''
  #  CREDS_IN_DEPLOYER: ''
  #  RESTRICTED_USER_APP: ''
  #  CLOUD_HOST_OVERALL: ${OCP_CERT_1_HOST}
  #  CLOUD_TOKEN_OVERALL: ${OCP_CERT_1_TOKEN}
  #  PROJECT: spark
  ### ----------------------------------- fenrir configuration --------------------------------------- ###
  PREFIX: fenrir_orchestration
  JENKINS_URL: ''
  JENKINS_USER: ''
  JENKINS_PASS: ''
  CREDS_IN_DEPLOYER: ''
  RESTRICTED_USER_APP: ''
  CLOUD_HOST_OVERALL: ${FENRIR_KUBER_HOST}
  CLOUD_TOKEN_OVERALL: ${FENRIR_KUBER_TOKEN}
  PROJECT: spark
  ### ----------------------------------- qa_kubernetes configuration ----------------------------------- ###
#  PREFIX: qa_kubernetes_orchestration
#  JENKINS_URL: ''
#  JENKINS_USER: ''
#  JENKINS_PASS: ''
#  CREDS_IN_DEPLOYER: ''
#  RESTRICTED_USER_APP: ''
#  CLOUD_HOST_OVERALL: ${QA_KUBER_HOST}
#  CLOUD_TOKEN_OVERALL: ${QA_KUBER_TOKEN}
#  PROJECT: spark
  ### ----------------------------------------- Manifests ------------------------------------------ ###
  LATEST_SPRINT: ''
  PREVIOUS_SPRINT: ''
  N1_RELEASE: ''
  N2_RELEASE: ''
  LATEST_SPRINT_TAG: ''
  PREVIOUS_SPRINT_TAG: ''

stages:
  - clean_previous_sprint
  - upgrade_from_previous_to_latest
  - clean_latest_sprint
  - upgrade_to_latest_diff_params
  - clean_n1_release
  - upgrade_from_n1_to_latest
  - clean_n2_release
  - upgrade_from_n2_to_latest
  - clean_latest_sprint_without_components
  - clean_previous_sprint_restricted
  - update_from_previous_to_latest_restricted
  - clean_latest_sprint_restricted
  - clean_latest_sprint_tls_issuer
  - update_latest_sprint_tls_cert
  - create_report

default:
  before_script:
    - pip config set global.index-url qubership.org/api/pypi/pypi_python_org.pypi.proxy/simple
    - pip config set global.trusted-host dockerhub.qubership.org
    - python3 -m pip install --upgrade pip
    - pip install --no-cache-dir -r requirements.txt


.test-case:
  image: ${PYTHON_IMAGE}
  extends: .check_state_logs_script.run
  tags:
    - ''
  variables:
    CLOUD_HOST: ${CLOUD_HOST_OVERALL}
    CLOUD_TOKEN: ${CLOUD_TOKEN_OVERALL}
    ARRAY_NS: spark
    ALLOWED_ERROR_LOGS_AMOUNT: 1500
  allow_failure: true
  when: on_success
  #when: manual


include:
  - project: 'PROD.Platform.HA/Infra.Automation'
    ref: pipe_image
    file: 'api2.yaml'

.clear_namespace: &clear_namespace
  - python3 "$CLEAN_NS_SCRIPT" --cloud-token="${CLOUD_TOKEN}" --cloud-host="$CLOUD_HOST" --cloud-namespace="$PROJECT" --cr-list="scheduledsparkapplications,sparkapplications"
  - python3 "$CLEAN_NS_SCRIPT" --cloud-token="${CLOUD_TOKEN}" --cloud-host="$CLOUD_HOST" --cloud-namespace="$APP_NS" --cr-list="scheduledsparkapplications,sparkapplications"


Clean [PREVIOUS_SPRINT]:
  extends: .test-case
  stage: clean_previous_sprint
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/clean_deploy_k8s.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${PREVIOUS_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"

2-Upgrade From [PREVIOUS_SPRINT] To [LATEST_SPRINT]:
  extends: .test-case
  stage: upgrade_from_previous_to_latest
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/clean_deploy_k8s.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - !reference [.template_job_status, script]

3-Clean [LATEST_SPRINT]:
  extends: .test-case
  stage: clean_latest_sprint
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/clean_deploy_k8s.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - !reference [.template_job_status, script]

4-Upgrade [LATEST_SPRINT] Diff Params:
  extends: .test-case
  stage: upgrade_to_latest_diff_params
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/update_deploy_k8s.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - !reference [.template_job_status, script]

5-Clean [N1_RELEASE]:
  extends: .test-case
  stage: clean_n1_release
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/clean_deploy_k8s.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${N1_RELEASE}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"

6-Upgrade From [N1_RELEASE] To [LATEST_SPRINT]:
  extends: .test-case
  stage: upgrade_from_n1_to_latest
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/clean_deploy_k8s.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"

7-Clean [N2_RELEASE]:
  extends: .test-case
  stage: clean_n2_release
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/clean_deploy_k8s.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${N2_RELEASE}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"

8-Upgrade From [N2_RELEASE] To [LATEST_SPRINT]:
  extends: .test-case
  stage: upgrade_from_n2_to_latest
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/clean_deploy_k8s.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"

9-Clean [LATEST_SPRINT] W/O Components:
  extends: .test-case
  stage: clean_latest_sprint_without_components
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/deploy_with_minimal_params_k8s.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"

# Restricted
10-Clean [PREVIOUS_SPRINT] Restricted:
  extends: .test-case
  stage: clean_previous_sprint_restricted
  script:
    - *clear_namespace
    - python3 "${APPLY_RESOURCES_SCRIPT}" --cloud-host="${CLOUD_HOST}" --cloud-token="${CLOUD_TOKEN}" --namespace="${PROJECT}" --crd-tag="${PREVIOUS_SPRINT_TAG}"
    - python3 "${APPLY_RESOURCES_SCRIPT}" --cloud-host="${CLOUD_HOST}" --cloud-token="${CLOUD_TOKEN}" --namespace="${APP_NS}" --crd-tag="${PREVIOUS_SPRINT_TAG}"
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/clean-restricted.yml"  --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${RESTRICTED_USER_APP}" --artifact="${PREVIOUS_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - !reference [.template_job_status, script]
  only: { variables: [ $RESTRICTED_USER_APP != "" ] }

11-Upgrade From [PREVIOUS_SPRINT] To [LATEST_SPRINT] Restricted:
  extends: .test-case
  stage: update_from_previous_to_latest_restricted
  script:
    - python3 "${UPGRADE_CRD_SCRIPT}" --cloud-host="${CLOUD_HOST}" --cloud-token="${CLOUD_TOKEN}" --crd-tag="${LATEST_SPRINT_TAG}"
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/clean-restricted.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${RESTRICTED_USER_APP}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - !reference [.template_job_status, script]
  only: { variables: [ $RESTRICTED_USER_APP != "" ] }

12-Clean [LATEST_SPRINT] Restricted:
  extends: .test-case
  stage: clean_latest_sprint_restricted
  script:
    - *clear_namespace
    - python3 "${APPLY_RESOURCES_SCRIPT}" --cloud-host="${CLOUD_HOST}" --cloud-token="${CLOUD_TOKEN}" --namespace="${PROJECT}" --crd-tag="${LATEST_SPRINT_TAG}"
    - python3 "${APPLY_RESOURCES_SCRIPT}" --cloud-host="${CLOUD_HOST}" --cloud-token="${CLOUD_TOKEN}" --namespace="${APP_NS}" --crd-tag="${LATEST_SPRINT_TAG}"
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/clean-restricted.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${RESTRICTED_USER_APP}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - !reference [.template_job_status, script]
  only: { variables: [ $RESTRICTED_USER_APP != "" ] }

# TLS
13-Clean [LATEST_SPRINT] TLS ClusterIssuer:
  extends: .test-case
  stage: clean_latest_sprint_tls_issuer
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/clean_tls_issuer.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"

14-Update [LATEST_SPRINT] TLS CertManager:
  extends: .test-case
  stage: update_latest_sprint_tls_cert
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/update_tls_cert.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"

Report:
  image: ${PYTHON_IMAGE}
  tags:
    - ''
  when: on_success
  stage: create_report
  script:
    - python3 ${REPORT_SCRIPT} --pipeline_id="${CI_PIPELINE_ID}" --token="${GIT_TOKEN}" --webex-room-id="${WEBEX_CI_ROOM_ID}" --webex-token="${WEBEX_CI_TOKEN}" --versions="LATEST_SPRINT=${LATEST_SPRINT}, PREVIOUS_SPRINT=${PREVIOUS_SPRINT},N1_RELEASE=${N1_RELEASE},N2_RELEASE=${N2_RELEASE},LATEST_SPRINT_TAG=${LATEST_SPRINT_TAG},PREVIOUS_SPRINT_TAG=${PREVIOUS_SPRINT_TAG}"
  artifacts:
    paths:
      - "*.html"