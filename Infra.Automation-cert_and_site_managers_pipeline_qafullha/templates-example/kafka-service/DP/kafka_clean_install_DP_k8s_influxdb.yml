JOB_NAME: ''
JENKINS_URL: ''
TOKEN_NAME: CLOUD_TOKEN
CLOUD_URL: ''
CLOUD_NAMESPACE: kafka-service
DESCRIPTOR_URL: ''
DEPL\_MODE\: clean
KUBECTL_VERSION: 1.18.4
HELM_VERSION: 3.2.1
ADDITIONAL_OPTIONS: []
DEPLOYMENT_PARAMETERS: |
  kafkaServiceOperator:
    name: kafka
  kafka:
    install: true
    affinity: {
      "podAffinity": {
        "preferredDuringSchedulingIgnoredDuringExecution": [
        {
          "weight": 100,
          "podAffinityTerm": {
            "labelSelector": {
              "matchExpressions": [
              {
                "key": "component",
                "operator": "In",
                "values": [
                  "zookeeper"
                ]
              }
              ]
            },
            "topologyKey": "kubernetes.io/hostname"
          }
        }
        ]
      },
      "podAntiAffinity": {
        "requiredDuringSchedulingIgnoredDuringExecution": [
        {
          "labelSelector": {
            "matchExpressions": [
            {
              "key": "component",
              "operator": "In",
              "values": [
                "kafka"
              ]
            }
            ]
          },
          "topologyKey": "kubernetes.io/hostname"
        }
        ]
      }
    }
    disableSecurity: true
    heapSize: 256
    replicas: 3
    securityContext: {
      "runAsUser": 1000
    }
    storage:
      size: 1Gi
      className:
        - manual
      volumes:
        - pv-kafka-1
        - pv-kafka-2
        - pv-kafka-3
      nodes:
        - worker1
        - worker2
        - worker3
    terminationGracePeriod: 180
    rollbackTimeout: 3600
    zookeeperConnect: zookeeper.zookeeper-service:2181
    externalHostNames:
      - ***.***.***.***
      - ***.***.***.***
      - ***.***.***.***
    externalPorts:
      - 31001
      - 31002
      - 31003
    adminUsername: 'admin'
    adminPassword: ''
    clientUsername: 'client'
    clientPassword: ''
    
    zookeeperClientUsername: 'zclient'
    zookeeperClientPassword: ''
    environmentVariables:
      - CONF_KAFKA_PROPERTY_NAME=propertyValue
      - KEY=VALUE
  monitoring:
    install: true
    affinity: {
      "podAffinity": {
        "preferredDuringSchedulingIgnoredDuringExecution": [
        {
          "podAffinityTerm": {
            "labelSelector": {
              "matchExpressions": [
              {
                "key": "component",
                "operator": "In",
                "values": [
                  "kafka"
                ]
              }
              ]
            },
            "topologyKey": "kubernetes.io/hostname"
          },
          "weight": 100
        }
        ]
      }
    }
    smDbHost: "http://***.***.***.***:8086"
    smDbName: "licensing_service_kuber"
    kafkaZookeeperChRoot: zookeeper.zookeeper-service:2181
    jolokiaPort: 9087
    kafkaMeasurementPrefixName: kafka_
    kafkaTotalBrokerCount: 3
    securityContext: {
      "runAsUser": 1000
    }
    monitoringType: prometheus
    installGrafanaDashboard: true
    kafkaPassword: 'client'
    kafkaUser: 'client'
    prometheusUsername: 'prometheus'
    prometheusPassword: 'prometheus'
    smDbPassword: 'admin'
    smDbUsername: 'admin'
    monitoringCoreosGroup: false
  akhq:
    install: true  
    affinity: {
      "podAffinity": {
        "preferredDuringSchedulingIgnoredDuringExecution": [
        {
          "podAffinityTerm": {
            "labelSelector": {
              "matchExpressions": [
              {
                "key": "component",
                "operator": "In",
                "values": [
                  "kafka"
                ]
              }
              ]
            },
            "topologyKey": "kubernetes.io/hostname"
          },
          "weight": 100
        }
        ]
      }
    }
    kafkaPollTimeout: 10000
    enableAccessLog: false
    ingress:
      host: akhq-kafka-service.search.example.com
    securityContext: {
      "fsGroup": 1000,
      "runAsUser": 1000
    }
    akhqDefaultUser: 'akhq'
    akhqDefaultPassword: 'akhq'
  mirrorMaker:
    install: false
    affinity: {
      "podAffinity": {
        "preferredDuringSchedulingIgnoredDuringExecution": [
        {
          "podAffinityTerm": {
            "labelSelector": {
              "matchExpressions": [
              {
                "key": "component",
                "operator": "In",
                "values": [
                  "kafka"
                ]
              }
              ]
            },
            "topologyKey": "kubernetes.io/hostname"
          },
          "weight": 100
        }
        ]
      }
    }
    heapSize: 256
    replicas: 1
    clusters:
      - {"name": "first", "bootstrapServers": "kafka.kafka-service:9092" }
      - {"name": "second", "bootstrapServers": "kafka.kafka-operator:9092"}
    replicationFactor: 3
    refreshTopicsIntervalSeconds: 5
    refreshGroupsIntervalSeconds: 5
    jolokiaPort: 9087
    jolokiaUsername: client
    jolokiaPassword: client
    environmentVariables:
      - CONF_propertyName=propertyValue
      - clusterAlias_CONF_propertyName=propertyValue
      - sourceClusterAlias_targetClusterAlias_CONF_propertyName=propertyValue
  mirrorMakerMonitoring:
    install: false
    dockerImage: streaming_kafka-mirror-maker-monitoring:main_latest
    affinity: {
      "podAffinity": {
        "preferredDuringSchedulingIgnoredDuringExecution": [
        {
          "podAffinityTerm": {
            "labelSelector": {
              "matchExpressions": [
              {
                "key": "component",
                "operator": "In",
                "values": [
                  "kafka"
                ]
              }
              ] 
            },
            "topologyKey": "kubernetes.io/hostname"
          },
          "weight": 100
        }
        ]
      }
    }
    monitoringType: influxdb
    smDbHost: "http://***.***.***.***:8086"
    smDbName: "cloud_helm"
    smDbPassword: 'admin'
    smDbUsername: 'admin'
    kmmExecPluginTimeout: "20s"
    kmmCollectionInterval: "5s"
    jolokiaUsername: "client"
    jolokiaPassword: "client"
    securityContext: {
      "runAsUser": 1000
    }
  integration-tests:
    service:
      name: kafka-integration-tests-runner
    secret:
      token: "eyJhbGciOiJSUzI1NiIsImtpZCI6InFqd2N4TElXSUxyTDlzcTVMczlnOGlYQ1FsQmJqT0hNUkNTVGNrT2pzT00ifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJzdXBlcmFkbWluLXRva2VuLXZwOXBwIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6InN1cGVyYWRtaW4iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiJhZWUxZWI3MC1jY2Y3LTRiMGUtYjU3Ni01Y2VkOGE2NmZjNjkiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZS1zeXN0ZW06c3VwZXJhZG1pbiJ9.BbgCME60Fk-Wx_kzpMcbiBChFadOcSYvsPak-AwxPBqr2ZgoGNAGDbJCileXyQ-COyt6UmaVCfs2LP-yvpDEFfQIeqUgnHKar2T1TSmrznb0MXlpOjvcDr5Fb6gK7T04RhTVTx6BBkFDBRtMZj9MPhJ7tejL-q-1kYXVPHjgngZWMuBlK72e3cJzWb5vyKuKUZuj3b23fpiwTku7rvSrjGW6_3TLr3eC6jIovsyR0gfKnvV_UIAXySaSGK_Y0lI6_9VJSDMtw_ncotC7d5448Bkql9jO5y-af-iAKoPl8dhPZyiMDdaLaEx1TrYRxrPaqIX4VpRwSJMid_NPnje8XQ"
    zabbix:
      user: ""
      password: ''
    kafka:
      user: "client"
      password: ''
    integrationTests:
      install: true
      tags: "kafkaNOTzabbix"
      url: "https://dashboard.qa-kubernetes.openshift.sdntest.qubership.org:6443"
      kafkaIsManagedByOperator: "true"
      zookeeperOsProject: "zookeeper-service"
      kafkaOsProject: "kafka-service"
      zookeeperHost: "zookeeper"
      zookeeperPort: 2181
      kafkaHost: "kafka"
      kafkaPort: 9092
      zabbixUrl: ""
      kafkaMeasurementPrefixName: "kafka_"
      cloudDb: "cloud_openshift_com"
      kafkaPvNames: "pv-kafka-1,pv-kafka-2,pv-kafka-3"
      kafkaMeasurementInterval: "3m"
