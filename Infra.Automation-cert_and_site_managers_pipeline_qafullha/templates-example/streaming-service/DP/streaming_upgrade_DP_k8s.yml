JOB_NAME: ''
JENKINS_URL: ''
TOKEN_NAME: CLOUD_TOKEN
CLOUD_URL: ''
CLOUD_NAMESPACE: streaming-service
DESCRIPTOR_URL: ''
DESCRIPTOR_NAME: DESCRIPTOR_URL
DEPL\_MODE\: upgrade
KUBECTL_VERSION: 1.18.4
HELM_VERSION: 3.2.1
ADDITIONAL_OPTIONS: []
DEPLOYMENT_PARAMETERS: |
  global:
    name: streaming
    secrets:
      streamingPlatform:
        username: "admin"
        password: ''
        kafkaAuthUsername: "client"
        kafkaAuthPassword: "client"
      monitoring:
        prometheusUsername: "prometheus"
        prometheusPassword: "prometheus"
  operator:
    replicas: 1
  streamingPlatform:
    install: true
    replicas: 3
    affinity: {
      "podAntiAffinity": {
        "requiredDuringSchedulingIgnoredDuringExecution": [
        {
          "labelSelector": {
            "matchExpressions": [
            {
              "key": "component",
              "operator": "In",
              "values": [
                "streaming-platform"
              ]
            }
            ]
          },
          "topologyKey": "kubernetes.io/hostname"
        }
        ]
      }
    }
    tolerations:
      - key: ''
        operator: "Equal"
        value: "value1"
        effect: "NoExecute"
        tolerationSeconds: 3600
    heapSize: 512
    resources:
      requests:
        cpu: 100m
        memory: 300Mi
      limits:
        cpu: 400m
        memory: 1024Mi
    ingress:
      host: "streaming-platform-streaming-service.qa-kubernetes.openshift.sdntest.qubership.org"
    bootstrapServers: "kafka.kafka-service:9092"
  monitoring:
    install: true
    monitoringType: prometheus
    installDashboard: true
    securityContext: {
      "runAsUser": 1000
    }
  configurator:
    install: false
  vaultSecretManagement:
    enabled: false
    url: http://vault-service.example:8200
    method: kubernetes
    role: kubernetes-operator-role
    path: secret
    writePolicies: true
    passwordGenerationMechanism: operator
    refreshCredentials: false
  integrationTests:
    service:
      name: streaming-integration-tests-runner
    secrets:
      postgres:
        user: "postgres"
        password: ''
      oracleSource:
        user: "oracle"
        password: ''
      oracleSink:
        user: "oracle"
        password: ''
      elasticsearch:
        user: "sHLggQG5Y27yyQtu"
        password: ''
      zookeeper:
        adminUser: "zadmin"
        adminPassword: ''
        clientUser: "zclient"
        clientPassword: ''
      mongo:
        user: "root"
        password: ''
    install: true
    affinity: {
      "podAffinity": {
        "preferredDuringSchedulingIgnoredDuringExecution": [
          {
            "podAffinityTerm": {
              "labelSelector": {
                "matchExpressions": [
                  {
                    "key": "component",
                    "operator": "In",
                    "values": [
                        "streaming-platform"
                    ]
                  }
                ]
              },
              "topologyKey": "kubernetes.io/hostname"
            },
            "weight": 100
          }
        ]
      }
    }
    tags: "streaming_platform"
    url: "https://dashboard.qa-kubernetes.openshift.sdntest.qubership.org:6443"
    kafkaIsManagedByOperator: "true"
    streamingPlatformIsManagedByOperator: "true"
    kafkaOsProject: "kafka-service"
    kafkaHost: "kafka"
    kafkaPort: 9092
    kafkaVolumeSize: 2
    kafkaPvNames: ""
    kafkaMeasurementPrefixName: "kafka"
    streamingPlatformHost: "streaming-platform"
    streamingPlatformPort: 8083
    postgresHost: "pg-patroni.postgres"
    postgresPort: 5432
    postgresDb: "postgres"
    mongoHost: mongos.mongo
    mongoPort: 27017
    mongoDb: "public"
    oracleSourceHost: ***.***.***.***
    oracleSourcePort: 1521
    oracleSourceDb: "xe"
    oracleSourceLogmnrContinuousMineEnabled: false
    elasticsearchHost: "elasticsearch.elasticsearch-cluster"
    elasticsearchHttpPort: 9200
    elasticsearchTransportPort: 9300
    oracleSinkHost: null
    oracleSinkPort: 1521
    oracleSinkDb: "xe"
    timeout: 3000
    prometheusUrl: "http://prometheus.qa-kubernetes.openshift.sdntest.qubership.org"
    resources:
      requests:
        memory: 256Mi
        cpu: 300m
      limits:
        memory: 256Mi
        cpu: 500m
