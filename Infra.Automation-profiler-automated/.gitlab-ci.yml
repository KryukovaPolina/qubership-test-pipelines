variables:
  PYTHON_IMAGE: pipe_image_latest
  JOB_NAME_CLEAN: ''
  JOB_NAME_UPDATE: ''
  DEPLOY_SCRIPT_APP: /scripts/external_platform_library_builtIn/deploy\_with\_deployer.py
  UPGRADE_CRD_SCRIPT: /scripts/external_platform_library_builtIn/upgrade_crd.py
  APPLY_RESOURCES_SCRIPT: /scripts/external_platform_library_builtIn/prepare_restricted_resources.py
  CLEAN_NS_SCRIPT: /scripts/external_platform_library_builtIn/clean_namespace.py
  PATCH_NS: /scripts/external_platform_library_builtIn/patch_ns_restricted.py
  REPORT_SCRIPT: /scripts/external_platform_library_builtIn/report.py
  ### ----------------------------------- Cloud specific configuration ----------------------------------- ###
  ### ----------------------------------- ocp_cert_1 configuration --------------------------------------- ###
  # PREFIX: ocp_cert_1
  # JENKINS_URL: ''
  # JENKINS_USER: ''
  # JENKINS_PASS: ''
  # CREDS_IN_DEPLOYER: ''
  # RESTRICTED_USER_APP: ''
  # CLOUD_HOST_OVERALL: ${OCP_CERT_1_HOST}
  # CLOUD_TOKEN_OVERALL: ${OCP_CERT_1_TOKEN}
  # PROJECT: profiler

   ## ----------------------------------- ocp4_qa configuration --------------------------------------- ###
  # PREFIX: ocp4_qa
  # JENKINS_URL: ''
  # JENKINS_USER: ''
  # JENKINS_PASS: ''
  # CREDS_IN_DEPLOYER: ''
  # RESTRICTED_USER_APP: ''
  # CLOUD_HOST_OVERALL: ${OCP4_QA_HOST}
  # CLOUD_TOKEN_OVERALL: ${OCP4_QA_TOKEN}
  # PROJECT: profiler-qa
  ### ----------------------------------- qa_kubernetes configuration ----------------------------------- ###
  PREFIX: qa_kubernetes_orchestration
  JENKINS_URL: ''
  JENKINS_USER: ''
  JENKINS_PASS: ''
  CREDS_IN_DEPLOYER: ''
  RESTRICTED_USER_APP: ''
  CLOUD_HOST_OVERALL: ${QA_KUBER_HOST}
  CLOUD_TOKEN_OVERALL: ${QA_KUBER_TOKEN}
  PROJECT: profiler
  ### ----------------------------------------- Manifests ------------------------------------------ ###
  # MAN_APP_RELEASE2: Cloud-Diagnostic-Toolset:release-***.***.***.***-20230316.142010-1-RELEASE
  # MAN_APP_RELEASE: Cloud-Diagnostic-Toolset:release-***.***.***.***-20230911.113207-2-RELEASE
  # MAN_APP_OLD: Cloud-Diagnostic-Toolset:release-***.***.***.***-20231102.083351-3-RELEASE
  # MAN_APP_NEW: Cloud-Diagnostic-Toolset:release-***.***.***.***-20231121.122643-1-RELEASE
  N2_RELEASE: ''
  N1_RELEASE: ''
  PREVIOUS_SPRINT: ''
  LATEST_SPRINT: ''
  # Tests URL 
  PROFILER_TEST_INGRESS: https://esc-test-service-profiler.qa-kubernetes.openshift.sdntest.qubership.org

stages:
  - clean_latest_sprint
  - clean_previous_sprint
  - update_from_previous_to_latest
  - clean_n1_release
  - upgrade_from_n1_release_to_latest_sprint
  - clean_n2_release
  - upgrade_from_n2_release_to_latest_sprint
  - clean_latest_sprint_with_opensearch
  - clean_previous_sprint_with_opensearch
  - upgrade_to_latest_sprint_with_opensearch
  - clean_previous_sprint_restricted
  - update_from_previous_to_latest_restricted
  - clean_latest_sprint_restricted
  - clean_latest_sprint_with_basic_auth
  - clean_latest_sprint_emptyDIR
  - clean_latest_sprint_with_test_service
  - create_report

default:
  before_script:
    - pip config set global.index-url qubership.org/api/pypi/pypi_python_org.pypi.proxy/simple
    - pip config set global.trusted-host dockerhub.qubership.org
    - python3 -m pip install --upgrade pip
    - pip install --no-cache-dir -r requirements.txt

.test-case: &test-case
  image: ${PYTHON_IMAGE}
  extends: .check_state_logs_script.run
  variables:
    CLOUD_HOST: ${CLOUD_HOST_OVERALL}
    CLOUD_TOKEN: ${CLOUD_TOKEN_OVERALL}
    ARRAY_NS: ${PROJECT}
    ALLOWED_RESTARTS_AMOUNT: 1
    ALLOWED_ERROR_LOGS_AMOUNT: 200
  tags:
    - ''
  allow_failure: true
  when: on_success
  #when: manual

.clean_ns: &clean_ns
  - python3 "${CLEAN_NS_SCRIPT}" --cloud-token="${CLOUD_TOKEN}" --cloud-host="${CLOUD_HOST}" --cloud-namespace="${PROJECT}" --pv-list="" --cr-list=""

include:
  - project: 'PROD.Platform.HA/Infra.Automation'
    ref: pipe_image
    file: 'api2.yaml'

1-Clean [LATEST_SPRINT]:
  <<: *test-case
  stage: clean_latest_sprint
  script:
    - *clean_ns
    - python3 "${DEPLOY_SCRIPT_APP}" -f "./templates/${PREFIX}/cassandra_wo_test-service.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - !reference [.template_job_status, script]

2-Clean [PREVIOUS_SPRINT]:
  <<: *test-case
  stage: clean_previous_sprint
  script:
    - *clean_ns
    - python3 "${DEPLOY_SCRIPT_APP}" -f "./templates/${PREFIX}/cassandra_wo_test-service.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${PREVIOUS_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"

3-Upgrade From [PREVIOUS_SPRINT] To [LATEST_SPRINT]:
  <<: *test-case
  stage: update_from_previous_to_latest
  script:
    - python3 "${DEPLOY_SCRIPT_APP}" -f "./templates/${PREFIX}/cassandra_wo_test-service.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - !reference [.template_job_status, script]

4-Clean [N1_RELEASE]:
  <<: *test-case
  stage: clean_n1_release
  script:
    - *clean_ns
    - python3 "${PATCH_NS}" --cloud-token="${CLOUD_TOKEN}" --cloud-host="${CLOUD_HOST}" --namespace="${PROJECT}" --label="add"
    - python3 "${DEPLOY_SCRIPT_APP}" -f "./templates/${PREFIX}/cassandra_wo_test-service.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${N1_RELEASE}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"

5-Upgrade From [N1_RELEASE] To [LATEST_SPRINT]:
  <<: *test-case
  stage: upgrade_from_n1_release_to_latest_sprint
  script:
    - python3 "${PATCH_NS}" --cloud-token="${CLOUD_TOKEN}" --cloud-host="${CLOUD_HOST}" --namespace="${PROJECT}" --label="add"
    - python3 "${DEPLOY_SCRIPT_APP}" -f "./templates/${PREFIX}/cassandra_wo_test-service.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - !reference [.template_job_status, script]

6-Clean [N2_RELEASE]:
  <<: *test-case
  stage: clean_n2_release
  script:
    - *clean_ns
    - python3 "${PATCH_NS}" --cloud-token="${CLOUD_TOKEN}" --cloud-host="${CLOUD_HOST}" --namespace="${PROJECT}" --label="add"
    - python3 "${DEPLOY_SCRIPT_APP}" -f "./templates/${PREFIX}/cassandra_wo_test-service.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${N2_RELEASE}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"

7-Upgrade From [N2_RELEASE] To [LATEST_SPRINT]:
  <<: *test-case
  stage: upgrade_from_n2_release_to_latest_sprint
  script:
    - python3 "${DEPLOY_SCRIPT_APP}" -f "./templates/${PREFIX}/cassandra_wo_test-service.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - !reference [.template_job_status, script]

8-Clean [LATEST_SPRINT] With Opensearch:
  <<: *test-case
  stage: clean_latest_sprint_with_opensearch
  script:
    - *clean_ns
    - python3 "${PATCH_NS}" --cloud-token="${CLOUD_TOKEN}" --cloud-host="${CLOUD_HOST}" --namespace="${PROJECT}" --label="add"
    - python3 "${DEPLOY_SCRIPT_APP}" -f "./templates/${PREFIX}/opensearch_wo_test-service.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - !reference [.template_job_status, script]

9-Clean [PREVIOUS_SPRINT] With Opensearch:
  <<: *test-case
  stage: clean_previous_sprint_with_opensearch
  script:
    - *clean_ns
    - python3 "${PATCH_NS}" --cloud-token="${CLOUD_TOKEN}" --cloud-host="${CLOUD_HOST}" --namespace="${PROJECT}" --label="add"
    - python3 "${DEPLOY_SCRIPT_APP}" -f "./templates/${PREFIX}/opensearch_wo_test-service.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${PREVIOUS_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"

10-Upgrade From [PREVIOUS_SPRINT] To [LATEST_SPRINT] With Opensearch:
  <<: *test-case
  stage: upgrade_to_latest_sprint_with_opensearch
  script:
    - python3 "${DEPLOY_SCRIPT_APP}" -f "./templates/${PREFIX}/opensearch_wo_test-service.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - !reference [.template_job_status, script]

# Restricted
11-Clean [PREVIOUS_SPRINT] Restricted:
  <<: *test-case
  stage: clean_previous_sprint_restricted
  script:
    - *clean_ns
    - python3 "${PATCH_NS}" --cloud-token="${CLOUD_TOKEN}" --cloud-host="${CLOUD_HOST}" --namespace="${PROJECT}" --label="add"
    - python3 "${APPLY_RESOURCES_SCRIPT}" --cloud-host="${CLOUD_HOST}" --cloud-token="${CLOUD_TOKEN}" --namespace="${PROJECT}" --crd-tag="old-tag" --service="profiler"
    - python3 "${DEPLOY_SCRIPT_APP}" -f "./templates/${PREFIX}/cassandra_wo_test-service.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${RESTRICTED_USER_APP}" --artifact="${PREVIOUS_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
  only: { variables: [ $RESTRICTED_USER_APP != "" ] }

12-Upgrade From [PREVIOUS_SPRINT] To [LATEST_SPRINT] Restricted:
  <<: *test-case
  stage: update_from_previous_to_latest_restricted
  script:
    - python3 "${UPGRADE_CRD_SCRIPT}" --cloud-host="${CLOUD_HOST}" --cloud-token="${CLOUD_TOKEN}" --service="profiler"
    - python3 "${DEPLOY_SCRIPT_APP}" -f "./templates/${PREFIX}/cassandra_wo_test-service.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${RESTRICTED_USER_APP}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - !reference [.template_job_status, script]
  only: { variables: [ $RESTRICTED_USER_APP != "" ] }

13-Clean [LATEST_SPRINT] Restricted:
  <<: *test-case
  stage: clean_latest_sprint_restricted
  script:
    - *clean_ns
    - python3 "${PATCH_NS}" --cloud-token="${CLOUD_TOKEN}" --cloud-host="${CLOUD_HOST}" --namespace="${PROJECT}" --label="add"
    - python3 "${APPLY_RESOURCES_SCRIPT}" --cloud-host="${CLOUD_HOST}" --cloud-token="${CLOUD_TOKEN}" --namespace="${PROJECT}" --crd-tag="tag" --service="profiler"
    - python3 "${DEPLOY_SCRIPT_APP}" -f "./templates/${PREFIX}/cassandra_wo_test-service.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${RESTRICTED_USER_APP}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - !reference [.template_job_status, script]
  only: { variables: [ $RESTRICTED_USER_APP != "" ] }

# Custom
14-Clean [LATEST_SPRINT] With Basic auth:
  <<: *test-case
  stage: clean_latest_sprint_with_basic_auth
  script:
    - *clean_ns
    - python3 "${PATCH_NS}" --cloud-token="${CLOUD_TOKEN}" --cloud-host="${CLOUD_HOST}" --namespace="${PROJECT}" --label="add"
    - python3 "${DEPLOY_SCRIPT_APP}" -f "./templates/${PREFIX}/basic_auth.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - !reference [.template_job_status, script]
    

15-Clean [LATEST_SPRINT] With emptyDIR:
  <<: *test-case
  stage: clean_latest_sprint_emptyDIR
  script:
    - *clean_ns
    - python3 "${PATCH_NS}" --cloud-token="${CLOUD_TOKEN}" --cloud-host="${CLOUD_HOST}" --namespace="${PROJECT}" --label="add"
    - python3 "${DEPLOY_SCRIPT_APP}" -f "./templates/${PREFIX}/PV_emptyDIR.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - !reference [.template_job_status, script]


16-Clean [LATEST_SPRINT] With Test-service:
  <<: *test-case
  stage: clean_latest_sprint_with_test_service
  script:
    - *clean_ns
    - python3 "${PATCH_NS}" --cloud-token="${CLOUD_TOKEN}" --cloud-host="${CLOUD_HOST}" --namespace="${PROJECT}" --label="add"
    - python3 "${DEPLOY_SCRIPT_APP}" -f "./templates/${PREFIX}/cassandra_with_test-service.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - python3 ./scripts/profiler_tests.py --url="${PROFILER_TEST_INGRESS}" --token="${CLOUD_TOKEN}" --host="${CLOUD_HOST}" --namespace="${PROJECT}"
    - !reference [.template_job_status, script]
  variables:
    CLOUD_HOST: ${QA_KUBER_HOST}
    CLOUD_TOKEN: ${QA_KUBER_TOKEN}
    ARRAY_NS: ${PROJECT}
    ALLOWED_RESTARTS_AMOUNT: 4

Report:
  image: ${PYTHON_IMAGE}
  tags:
    - ''
  when: on_success
  stage: create_report
  script:
    - python3 ${REPORT_SCRIPT} --pipeline_id="${CI_PIPELINE_ID}" --token="${GIT_TOKEN}" --webex-room-id="${WEBEX_CI_ROOM_ID}" --webex-token="${WEBEX_CI_TOKEN}" --versions="LATEST_SPRINT=${LATEST_SPRINT}, PREVIOUS_SPRINT=${PREVIOUS_SPRINT}, N1_RELEASE=${N1_RELEASE}, N2_RELEASE=${N2_RELEASE}"
  artifacts:
    paths:
      - "*.html"
