.check_state_logs_script.variables:
  variables:
    STDOUT_FILE: post-check-stdout
    GRAYLOG_HOST: ''
    GRAYLOG_USER: admin
    GRAYLOG_PASS: admin
    CLOUD_HOST:  ${QA_KUBER_HOST}
    CLOUD_TOKEN: ${QA_KUBER_TOKEN}
    ALLOWED_RESTARTS_AMOUNT: 2
    ALLOWED_ERROR_LOGS_AMOUNT: 100

.check_state_logs_script.run:
  extends: .check_state_logs_script.variables
  image: pipe_image_latest
  tags:
    - ''
  after_script:
    - |
      for NS in $ARRAY_NS
        do
          python3 /scripts/external_platform_library_builtIn/postdeploy_checks.py --cloud-host="${CLOUD_HOST}" --cloud-token="${CLOUD_TOKEN}" --namespace="${NS}"
          source .env
          for i in $(seq 1 $COUNT); do
            echo "------------------------------------------------------------------------------------------------------------------------------------"
            python3 -c "import postdeploy_checks; postdeploy_checks.print_splitted_names(\"$PC\", $i)"
            echo -e "\e[0Ksection_start:`date +%s`:my_first_section[collapsed=true]\r\e[0KPost-check after deploy for namespace ${NS}, pod count $i"
            python3 -c "import postdeploy_checks; postdeploy_checks.print_graylog_link(\"$GRAYLOG_HOST\", \"$GRAYLOG_USER\", \"$GRAYLOG_PASS\", \"$NS\", \"$PC\", $i, \"$CLOUD_HOST\", \"$CLOUD_TOKEN\")"
            python3 -c "import postdeploy_checks; postdeploy_checks.show_logs_for_pod(\"$PC\", $i, \"$CLOUD_HOST\", \"$CLOUD_TOKEN\", \"$NS\")"
            echo -e "\e[0Ksection_end:`date +%s`:my_first_section\r\e[0K"
          done
          echo "------------------------------------------------------------------------------------------------------------------------------------"
          echo
          python3 /scripts/external_platform_library_builtIn/validate_tests_result.py --cloud-host="${CLOUD_HOST}" --cloud-token="${CLOUD_TOKEN}" --namespace="${NS}" --timeout="30"  --retry-timeout="1"
        done
  allow_failure: true


.template_job_status:
  script:
    - python3 -c "import postdeploy_checks; postdeploy_checks.set_state(\"$CLOUD_HOST\", \"$CLOUD_TOKEN\", \"$ARRAY_NS\", $ALLOWED_RESTARTS_AMOUNT, $ALLOWED_ERROR_LOGS_AMOUNT)" | tee $STDOUT_FILE


