#[Zookeeper-service] Regression sprint pipeline R2024.4 Sprint 1 (qa_kubernetes)
variables:
  PYTHON_IMAGE: pipe_image_latest
  KUBECTL: /builds/PROD.Platform.HA/Infra.Automation/binary/kubectl
  JOB_NAME_CLEAN: ''
  JOB_NAME_UPDATE: ''
  CLOUD_HOST: ${QA_KUBER_HOST}
  CLOUD_TOKEN: ${QA_KUBER_TOKEN}
  DEPLOY_SCRIPT: /scripts/external_platform_library_builtIn/deploy\_with\_deployer.py
  UPGRADE_CRD_SCRIPT: /scripts/external_platform_library_builtIn/upgrade_crd.py
  APPLY_RESOURCES_SCRIPT: /scripts/external_platform_library_builtIn/prepare_restricted_resources.py
  CLEAN_NS_SCRIPT: /scripts/external_platform_library_builtIn/clean_namespace.py
  PATCH_NS_SCRIPT: /scripts/external_platform_library_builtIn/patch_ns_restricted.py
  REPORT_SCRIPT: /scripts/external_platform_library_builtIn/report.py
  ### ----------------------------------- Cloud specific configuration ----------------------------------- ###
  ### ----------------------------------- ocp_cert_1 configuration --------------------------------------- ###
  # PREFIX: ocp_cert_1
  # JENKINS_URL: ''
  # JENKINS_USER: ''
  # JENKINS_PASS: ''
  # CREDS_IN_DEPLOYER: ''
  # RESTRICTED_USER_APP: ''
  # CLOUD_HOST_OVERALL: ${OCP_CERT_1_HOST}
  # CLOUD_TOKEN_OVERALL: ${OCP_CERT_1_TOKEN}
  # PROJECT: zookeeper-service
  # KUBECONFIG: $OCP_CERT_1_KUBECONFIG
  ### ----------------------------------- platcert01 configuration ----------------------------------- ###
  # PREFIX: platcert01
  # JENKINS_URL: ''
  # JENKINS_USER: ''
  # JENKINS_PASS: ''
  # CREDS_IN_DEPLOYER: ''
  # RESTRICTED_USER_APP: ''
  # CLOUD_HOST_OVERALL: ${PLATCERT01_HOST}
  # CLOUD_TOKEN_OVERALL: ${PLATCERT01_TOKEN_ADMIN}
  # PROJECT: zookeeper-service
  # KUBECONFIG: $PLATCERT01_KUBECONFIG
  ### ----------------------------------- qa_kubernetes_orchestration configuration ----------------------------------- ###
  PREFIX: qa_kubernetes_orchestration
  JENKINS_URL: ''
  JENKINS_USER: ''
  JENKINS_PASS: ''
  CREDS_IN_DEPLOYER: ''
  RESTRICTED_USER_APP: ''
  CLOUD_HOST_OVERALL: ${QA_KUBER_HOST}
  CLOUD_TOKEN_OVERALL: ${QA_KUBER_TOKEN}
  PROJECT: zookeeper-service
  KUBECONFIG: $QA_KUBER_KUBECONFIG
  ### ------------------------------------------- Manifests --------------------------------------------- ###
  N2_RELEASE: ''
  N1_RELEASE: ''
  PREVIOUS_SPRINT: ''
  LATEST_SPRINT: ''
  LATEST_SPRINT_TAG: ''
  PREVIOUS_SPRINT_TAG: ''


stages:
  - clean_previous_sprint
  - update_from_previous_sprint_to_latest_sprint
  - clean_latest_sprint
  - upgrade_latest_sprint_diff_params
  - clean_n1_release
  - upgrade_from_n1_release_to_latest_sprint
  - clean_n1_release_for_rolling_update
  - upgrade_from_n1_release_to_latest_sprint_rolling_update
  - clean_n2_release
  - upgrade_from_n2_release_to_latest_sprint
  - clean_latest_sprint_without_components
  - upgrade_latest_sprint_all_components_s3
  - clean_latest_sprint_non_tls
  - upgrade_latest_sprint_tls
  - clean_latest_sprint_tls
  - clean_latest_sprint_tls_secrets
  - upgrade_latest_sprint_tls_certificates
  - clean_latest_sprint_infra_passport
  - clean_previous_sprint_restricted
  - update_from_previous_sprint_to_latest_sprint_restricted
  - clean_latest_sprint_restricted
  - create_report


default:
  before_script:
    - pip config set global.index-url qubership.org/api/pypi/pypi_python_org.pypi.proxy/simple
    - pip config set global.trusted-host dockerhub.qubership.org
    - python3 -m pip install --upgrade pip
    - pip install --no-cache-dir -r requirements.txt
    - chmod +x $KUBECTL
    - echo "$KUBECONFIG" > kubeconfig.env
    - export KUBECONFIG=/builds/PROD.Platform.HA/Infra.Automation/kubeconfig.env

.test-case: &test-case
  image: ${PYTHON_IMAGE}
  extends: .check_state_logs_script.run
  variables:
    CLOUD_HOST: ${CLOUD_HOST_OVERALL}
    CLOUD_TOKEN: ${CLOUD_TOKEN_OVERALL}
    ARRAY_NS: ${PROJECT}
    ALLOWED_ERROR_LOGS_AMOUNT: 400
  tags:
    - ''
  allow_failure: true
  # when: manual
  when: on_success

.clean_ns: &clean_ns
  - python3 "${CLEAN_NS_SCRIPT}" --cloud-token="$CLOUD_TOKEN" --cloud-host="$CLOUD_HOST" --cloud-namespace="$PROJECT" --pv-list="pv-zookeeper-1,pv-zookeeper-2,pv-zookeeper-3,zookeeper-backup-nfs" --cr-list="zookeeperservices"

.clean_ns_and_pv: &clean_ns_and_pv
  - python3 "${CLEAN_NS_SCRIPT}" --cloud-token="${CLOUD_TOKEN}" --cloud-host="${CLOUD_HOST}" --cloud-namespace="${PROJECT}" --pv-list="pv-zookeeper-1,pv-zookeeper-2,pv-zookeeper-3,zookeeper-backup-nfs" --cr-list="zookeeperservices"
  - ssh -o StrictHostKeyChecking=no ubuntu@***.***.***.*** "sudo su; sudo rm -rf /mnt/data/pv-zookeeper-1/*; echo 'PV pv-zookeeper-1 is cleaned'; ls -l /mnt/data/pv-zookeeper-1/"
  - ssh -o StrictHostKeyChecking=no ubuntu@***.***.***.*** "sudo su; sudo rm -rf /mnt/data/pv-zookeeper-2/*; echo 'PV pv-zookeeper-2 is cleaned'; ls -l /mnt/data/pv-zookeeper-2/"
  - ssh -o StrictHostKeyChecking=no ubuntu@***.***.***.*** "sudo su; sudo rm -rf /mnt/data/pv-zookeeper-3/*; echo 'PV pv-zookeeper-3 is cleaned'; ls -l /mnt/data/pv-zookeeper-3/"


include:
  - project: 'PROD.Platform.HA/Infra.Automation'
    ref: pipe_image
    file: 'api2.yaml'

1-Clean [PREVIOUS_SPRINT]:
  <<: *test-case
  stage: clean_previous_sprint
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/zookeeper/${PREFIX}/zookeeper_install_crudtest_APP_k8s.yml"  --artifact="${PREVIOUS_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"

2-Upgrade From [PREVIOUS_SPRINT] To [LATEST_SPRINT]:
  <<: *test-case
  stage: update_from_previous_sprint_to_latest_sprint
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/zookeeper/${PREFIX}/zookeeper_install_APP_k8s.yml" --artifact="${LATEST_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - !reference [.template_job_status, script]

3-Clean [LATEST_SPRINT]:
  <<: *test-case
  stage: clean_latest_sprint
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/zookeeper/${PREFIX}/zookeeper_install_APP_k8s.yml"  --artifact="${LATEST_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - !reference [.template_job_status, script]

4-Upgrade [LATEST_SPRINT] Diff Params:
  <<: *test-case
  stage: upgrade_latest_sprint_diff_params
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/zookeeper/${PREFIX}/zookeeper_update_APP_k8s.yml" --artifact="${LATEST_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - !reference [.template_job_status, script]

5-Clean [N1_RELEASE]:
  <<: *test-case
  stage: clean_n1_release
  script:
    - python3 "${PATCH_NS_SCRIPT}" --cloud-token="${CLOUD_TOKEN}" --cloud-host="${CLOUD_HOST}" --namespace="${PROJECT}" --label="add"
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/zookeeper/${PREFIX}/zookeeper_install_crudtest_APP_k8s.yml"  --artifact="${N1_RELEASE}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - python3 "${PATCH_NS_SCRIPT}" --cloud-token="${CLOUD_TOKEN}" --cloud-host="${CLOUD_HOST}" --namespace="${PROJECT}" --label="remove"

6-Upgrade From [N1_RELEASE] To [LATEST_SPRINT]:
  <<: *test-case
  stage: upgrade_from_n1_release_to_latest_sprint
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/zookeeper/${PREFIX}/zookeeper_install_APP_k8s.yml" --artifact="${LATEST_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - !reference [.template_job_status, script]

7-Clean [N1_RELEASE] For Rolling Update:
  <<: *test-case
  stage: clean_n1_release_for_rolling_update
  script:
    - python3 "${PATCH_NS_SCRIPT}" --cloud-token="${CLOUD_TOKEN}" --cloud-host="${CLOUD_HOST}" --namespace="${PROJECT}" --label="add"
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/zookeeper/${PREFIX}/zookeeper_install_crudtest_APP_k8s.yml"   --artifact="${N1_RELEASE}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - python3 "${PATCH_NS_SCRIPT}" --cloud-token="${CLOUD_TOKEN}" --cloud-host="${CLOUD_HOST}" --namespace="${PROJECT}" --label="remove"

8-Upgrade From [N1_RELEASE] To [LATEST_SPRINT] Rolling Update:
  <<: *test-case
  stage: upgrade_from_n1_release_to_latest_sprint_rolling_update
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/zookeeper/${PREFIX}/zookeeper_rollingupdate_APP_k8s.yml" --artifact="${LATEST_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - !reference [.template_job_status, script]

9-Clean [N2_RELEASE]:
  <<: *test-case
  stage: clean_n2_release
  script:
    - python3 "${PATCH_NS_SCRIPT}" --cloud-token="${CLOUD_TOKEN}" --cloud-host="${CLOUD_HOST}" --namespace="${PROJECT}" --label="add"
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/zookeeper/${PREFIX}/zookeeper_install_crudtest_APP_k8s.yml"  --artifact="${N2_RELEASE}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - python3 "${PATCH_NS_SCRIPT}" --cloud-token="${CLOUD_TOKEN}" --cloud-host="${CLOUD_HOST}" --namespace="${PROJECT}" --label="remove"

10-Upgrade From [N2_RELEASE] To [LATEST_SPRINT]:
  <<: *test-case
  stage: upgrade_from_n2_release_to_latest_sprint
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/zookeeper/${PREFIX}/zookeeper_install_APP_k8s.yml" --artifact="${LATEST_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - !reference [.template_job_status, script]

11-Clean [LATEST_SPRINT] W/O Components:
  <<: *test-case
  stage: clean_latest_sprint_without_components
  script:
    - *clean_ns
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/zookeeper/${PREFIX}/zookeeper_install_minimal_APP_k8s.yml"  --artifact="${LATEST_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"

12-Upgrade [LATEST_SPRINT] All Components S3:
  <<: *test-case
  stage: upgrade_latest_sprint_all_components_s3
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/zookeeper/${PREFIX}/zookeeper_install_s3_APP_k8s.yml" --artifact="${LATEST_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - !reference [.template_job_status, script]

13-Clean [LATEST_SPRINT] non-TLS:
  <<: *test-case
  stage: clean_latest_sprint_non_tls
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/zookeeper/${PREFIX}/zookeeper_install_APP_k8s.yml"  --artifact="${LATEST_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - !reference [.template_job_status, script]

14-Upgrade [LATEST_SPRINT] TLS:
  <<: *test-case
  stage: upgrade_latest_sprint_tls
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/zookeeper/${PREFIX}/zookeeper_install_tls_APP_k8s.yml" --artifact="${LATEST_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - !reference [.template_job_status, script]

15-Clean [LATEST_SPRINT] TLS:
  <<: *test-case
  stage: clean_latest_sprint_tls
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/zookeeper/${PREFIX}/zookeeper_install_tls_APP_k8s.yml"  --artifact="${LATEST_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - !reference [.template_job_status, script]

16-Clean [LATEST_SPRINT] TLS Secrets:
  <<: *test-case
  stage: clean_latest_sprint_tls_secrets
  script:
    - *clean_ns
    - $KUBECTL delete secrets --all -n ${PROJECT}
    - $KUBECTL create -f ./resources/zookeeper_tls_secret.yml -n ${PROJECT} || true
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/zookeeper/${PREFIX}/zookeeper_install_tls_secrets.yml" --artifact="${LATEST_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - !reference [.template_job_status, script]

17-Upgrade [LATEST_SPRINT] TLS Certificates:
  <<: *test-case
  stage: upgrade_latest_sprint_tls_certificates
  script:
    - $KUBECTL delete secrets zookeeper-tls-secret zookeeper-backup-daemon-tls-secret -n ${PROJECT} || true
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/zookeeper/${PREFIX}/zookeeper_install_tls_certs.yml" --artifact="${LATEST_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="1166a846603576efa37a4ab945f5002153" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update" --request-type="post"
    - !reference [.template_job_status, script]

# Infra Passport
18-Clean [LATEST_SPRINT] Infra Passport:
  <<: *test-case
  stage: clean_latest_sprint_infra_passport
  script:
    - *clean_ns
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/zookeeper/${PREFIX}/zookeeper_infra_passport.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - !reference [.template_job_status, script]

# Restricted
19-Clean [PREVIOUS_SPRINT] Restricted:
  <<: *test-case
  stage: clean_previous_sprint_restricted
  script:
    - *clean_ns
    - python3 "${APPLY_RESOURCES_SCRIPT}" --cloud-host="${CLOUD_HOST}" --cloud-token="${CLOUD_TOKEN}" --namespace="${PROJECT}" --crd-tag="${PREVIOUS_SPRINT_TAG}" --service="zookeeper"
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/zookeeper/${PREFIX}/zookeeper_install_restricted_APP.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${RESTRICTED_USER_APP}" --artifact="${PREVIOUS_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
  only: { variables: [ $RESTRICTED_USER_APP != "" ] }

20-Upgrade From [PREVIOUS_SPRINT] To [LATEST_SPRINT] Restricted:
  <<: *test-case
  stage: update_from_previous_sprint_to_latest_sprint_restricted
  script:
    - python3 "${UPGRADE_CRD_SCRIPT}" --cloud-host="${CLOUD_HOST}" --cloud-token="${CLOUD_TOKEN}" --crd-tag="${LATEST_SPRINT_TAG}" --service="zookeeper"
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/zookeeper/${PREFIX}/zookeeper_install_restricted_APP.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${RESTRICTED_USER_APP}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - !reference [.template_job_status, script]
  only: { variables: [ $RESTRICTED_USER_APP != "" ] }

21-Clean [LATEST_SPRINT] Restricted:
  <<: *test-case
  stage: clean_latest_sprint_restricted
  script:
    - *clean_ns
    - python3 "${APPLY_RESOURCES_SCRIPT}" --cloud-host="${CLOUD_HOST}" --cloud-token="${CLOUD_TOKEN}" --namespace="${PROJECT}" --crd-tag="${LATEST_SPRINT_TAG}" --service="zookeeper"
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/zookeeper/${PREFIX}/zookeeper_install_restricted_APP.yml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${RESTRICTED_USER_APP}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - !reference [.template_job_status, script]
  only: { variables: [ $RESTRICTED_USER_APP != "" ] }

Report:
  image: ${PYTHON_IMAGE}
  tags:
    - ''
  when: on_success
  # when: manual
  stage: create_report
  script:
    - python3 ${REPORT_SCRIPT} --pipeline_id="${CI_PIPELINE_ID}" --token="${GIT_TOKEN}" --webex-room-id="${WEBEX_CI_ROOM_ID}" --webex-token="${WEBEX_CI_TOKEN}" --versions="LATEST_SPRINT=${LATEST_SPRINT},PREVIOUS_SPRINT=${PREVIOUS_SPRINT},N1_RELEASE=${N1_RELEASE},N2_RELEASE=${N2_RELEASE}"
  artifacts:
    paths:
      - "*.html"
