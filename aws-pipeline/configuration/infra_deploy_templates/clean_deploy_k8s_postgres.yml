|
  postgresUser=postgres;
  postgresPassword='';
  replicatorPassword=replicat0r;
  serviceAccount.create=true;
  serviceAccount.name=postgres-sa;
  patroni.install=false;
  patroni.majorUpgrade.enabled=false;
  externalDataBase.type=rds;
  externalDataBase.project=\"75828307256\";
  externalDataBase.instance=aurora-pg14-cert-instance-1;
  externalDataBase.port=5432;
  externalDataBase.region=us-east-1;
  externalDataBase.accessKeyId='';
  externalDataBase.secretAccessKey='';
  externalDataBase.authSecretName=k8s-cw-cloudwatch-exporter;
  externalDataBase.connectionName=amazonaws.com;
  externalDataBase.applyGrafanaDashboard=true;
  metricCollector.install=true;
  metricCollector.resources.limits.cpu=250m;
  metricCollector.resources.limits.memory=512Mi;
  metricCollector.resources.requests.cpu=100m;
  metricCollector.resources.requests.memory=256Mi;
  metricCollector.ocExecTimeout=10;
  metricCollector.metricsProfile=dev;
  metricCollector.prometheusMonitoring=true;
  metricCollector.applyGrafanaDashboard=true;
  metricCollector.pgHost=amazonaws.com;
  metricCollector.pgPort=5432;
  backupDaemon.install=true;
  backupDaemon.storage.type=provisioned;
  backupDaemon.storage.size=1Gi;
  backupDaemon.storage.storageClass=efs-sc-1;
  backupDaemon.securityContext.runAsUser=1000;
  backupDaemon.pgHost=amazonaws.com;
  dbaas.install=true;
  dbaas.apiVersion=v2;
  dbaas.multiUsers=true;
  dbaas.pgHost=amazonaws.com;
  dbaas.dbName=postgres;
  dbaas.adapter.username=dbaas-aggregator;
  dbaas.adapter.password=dbaas-aggregator;
  siteManager.install=false;
  tls.enabled=false;
  tests.install=true;
  tests.runTestScenarios=basic;
  postgresExporter.install=true;
  postgresExporter.dataSourceURI=amazonaws.com:5432/postgres?sslmode=require;
  postgresExporter.resources.limits.memory=300Mi;
  ESCAPE_SEQUENCE=true;
  