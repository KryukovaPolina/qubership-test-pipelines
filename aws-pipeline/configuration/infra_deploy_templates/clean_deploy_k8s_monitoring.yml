|
  publicCloudName=aws;
  grafana='
  ingress:
    host: grafana.cloudplatform-eks.k8s.qubership.org
  resources:
    requests:
      cpu: 200m
      memory: 400Mi
    limits:
      cpu: 500m
      memory: 800Mi
  imageRenderer:
    resources:
      requests:
        cpu: 10m
        memory: 250Mi
      limits:
        cpu: 300m
        memory: 500Mi
  securityContext:
    fsGroup: 2002
    runAsUser: 2002
  operator:
    logLevel: debug
    resources:
      requests:
        cpu: 10m
        memory: 50Mi
      limits:
        cpu: 150m
        memory: 150Mi
    securityContext:
      fsGroup: 2002
      runAsUser: 2002
  ';
  kubernetesMonitors='
  etcdServiceMonitor:
    install: false
  ';
  victoriametrics='
  vmOperator:
    install: true
    resources:
      requests:
        cpu: 10m
        memory: 100Mi
      limits:
        cpu: 400m
        memory: 200Mi
    securityContext:
      runAsUser: 2000
      fsGroup: 2000
  vmAgent:
    install: true
    additionalScrape:
      - job_name: graylog
        honor_timestamps: true
        scrape_interval: 30s
        scrape_timeout: 10s
        metrics_path: /api/plugins/org.graylog.plugins.metrics.prometheus/metrics
        scheme: https
        static_configs:
          - targets:
              - ***.***.***.***
        basic_auth:
          username: admin
          password: ''
        tls_config:
          insecure_skip_verify: true
    ingress:
      host: vmagent.cloudplatform-eks.k8s.qubership.org
      install: true
    securityContext:
      runAsUser: 2001
      fsGroup: 2001
    resources:
      requests:
        cpu: 10m
        memory: 100Mi
      limits:
        cpu: 700m
        memory: 1000Mi
  vmSingle:
    install: true
    ingress:
      install: true
      host: vmsingle.cloudplatform-eks.k8s.qubership.org
    paused: false
    retentionPeriod: 14d
    securityContext:
      runAsUser: 2000
      fsGroup: 2000
    resources:
      requests:
        cpu: 10m
        memory: 1000Mi
      limits:
        cpu: 1000m
        memory: 2000Mi
    storage:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
      storageClassName: gp2
  vmAlertManager:
    install: true
    ingress:
      host: vmalertmanager.cloudplatform-eks.k8s.qubership.org
      install: true
    selectAllByDefault: true
    securityContext:
      runAsUser: 2001
      fsGroup: 2001
    resources:
      requests:
        cpu: 10m
        memory: 56Mi
      limits:
        cpu: 100m
        memory: 256Mi
  vmAlert:
    install: true
    ingress:
      host: vmalert.cloudplatform-eks.k8s.qubership.org
      install: true
    securityContext:
      runAsUser: 2001
      fsGroup: 2001
    resources:
      requests:
        cpu: 10m
        memory: 200Mi
      limits:
        cpu: 200m
        memory: 500Mi
  vmAuth:
    install: false
  vmUser:
    install: false
  ';
  prometheusRules='
  install: true
  ';
  monitoringOperator='
  install: true
  securityContext:
    fsGroup: 2002
    runAsUser: 2002
  resources:
    requests:
      cpu: 10m
      memory: 50Mi
    limits:
      cpu: 100m
      memory: 100Mi
  ';
  kubeStateMetrics='
  resources:
    requests:
      cpu: 10m
      memory: 50Mi
    limits:
      cpu: 150m
      memory: 256Mi
  securityContext:
    fsGroup: 2002
    runAsUser: 2002
  install: true
  ';
  nodeExporter='
  resources:
    requests:
      cpu: 10m
      memory: 50Mi
    limits:
      cpu: 100m
      memory: 100Mi
  securityContext:
    fsGroup: 2002
    runAsUser: 2002
  install: true
  ';
  certExporter='
  install: true
  deployment:
    resources:
      requests:
        cpu: 10m
        memory: 50Mi
      limits:
        cpu: 20m
        memory: 150Mi
    securityContext:
      runAsUser: 0
  daemonset:
    resources:
      requests:
        cpu: 10m
        memory: 25Mi
      limits:
        cpu: 20m
        memory: 50Mi
    securityContext:
      runAsUser: 0
  certsInFiles:
    enabled: true
  ';
  networkLatencyExporter='
  install: true
  resources:
    requests:
      cpu: 10m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi
  securityContext:
    runAsUser: 0
  interval: 60s
  ';
  integrationTests='
  install: true
  tags: smokeORgrafana
  resources:
    requests:
      cpu: 10m
  ';
  cloudwatchExporter='
  install: true
  aws:
    aws_access_key_id: ''
    aws_secret_access_key: ''
  config: |
    # This is the default configuration for prometheus-cloudwatch-exporter
    region: us-east-1
    period_seconds: 120
    delay_seconds: 65
    metrics:
    ### PostgreSQL
    - aws_namespace: AWS/RDS
      aws_metric_name: DatabaseConnections
      aws_dimensions: [DBInstanceIdentifier]
      aws_statistics: [Sum]
    - aws_namespace: AWS/RDS
      aws_metric_name: CPUUtilization
      aws_dimensions: [DBInstanceIdentifier]
      aws_statistics: [Average]
    - aws_namespace: AWS/RDS
      aws_metric_name: FreeableMemory
      aws_dimensions: [DBInstanceIdentifier]
      aws_statistics: [Average]
    - aws_namespace: AWS/RDS
      aws_metric_name: ReadThroughput
      aws_dimensions: [DBInstanceIdentifier]
      aws_statistics: [Average]
    - aws_namespace: AWS/RDS
      aws_metric_name: WriteThroughput
      aws_dimensions: [DBInstanceIdentifier]
      aws_statistics: [Average]
    - aws_namespace: AWS/RDS
      aws_metric_name: ReadLatency
      aws_dimensions: [DBInstanceIdentifier]
      aws_statistics: [Maximum]
    - aws_namespace: AWS/RDS
      aws_metric_name: WriteLatency
      aws_dimensions: [DBInstanceIdentifier]
      aws_statistics: [Maximum]
    - aws_namespace: AWS/RDS
      aws_metric_name: ReadIOPS
      aws_dimensions: [DBInstanceIdentifier]
      aws_statistics: [Average]
    - aws_namespace: AWS/RDS
      aws_metric_name: WriteIOPS
      aws_dimensions: [DBInstanceIdentifier]
      aws_statistics: [Average]
    - aws_namespace: AWS/RDS
      aws_metric_name: DiskQueueDepth
      aws_dimensions: [DBInstanceIdentifier]
      aws_statistics: [Average]
    - aws_namespace: AWS/RDS
      aws_metric_name: SwapUsage
      aws_dimensions: [DBInstanceIdentifier]
      aws_statistics: [Average]
    - aws_namespace: AWS/RDS
      aws_metric_name: NetworkReceiveThroughput
      aws_dimensions: [DBInstanceIdentifier]
      aws_statistics: [Average]
    - aws_namespace: AWS/RDS
      aws_metric_name: NetworkTransmitThroughput
      aws_dimensions: [DBInstanceIdentifier]
      aws_statistics: [Average]
    - aws_namespace: AWS/RDS
      aws_metric_name: Deadlocks
      aws_dimensions: [DBInstanceIdentifier]
      aws_statistics: [Average]
    - aws_namespace: AWS/RDS
      aws_metric_name: VolumeBytesUsed
      aws_dimensions: [DBClusterIdentifier]
      aws_statistics: [Average]
    - aws_namespace: AWS/Backup
      aws_metric_name: NumberOfRecoveryPointsCompleted
      aws_dimensions: [ResourceType]
      aws_statistics: [Average]
    - aws_namespace: AWS/Backup
      aws_metric_name: NumberOfBackupJobsCompleted
      aws_dimensions: [ResourceType]
      aws_statistics: [Average]
    - aws_namespace: AWS/Backup
      aws_metric_name: NumberOfBackupJobsRunning
      aws_dimensions: [ResourceType]
      aws_statistics: [Average]
    - aws_namespace: AWS/Backup
      aws_metric_name: NumberOfBackupJobsCreated
      aws_dimensions: [ResourceType]
      aws_statistics: [Average]
    - aws_namespace: AWS/Backup
      aws_metric_name: NumberOfBackupJobsAborted
      aws_dimensions: [ResourceType]
      aws_statistics: [Average]
    - aws_namespace: AWS/Backup
      aws_metric_name: NumberOfBackupJobsPending
      aws_dimensions: [ResourceType]
      aws_statistics: [Average]
    - aws_namespace: AWS/Backup
      aws_metric_name: NumberOfBackupJobsFailed
      aws_dimensions: [ResourceType]
      aws_statistics: [Average]
  ';
  ESCAPE_SEQUENCE=true;
  