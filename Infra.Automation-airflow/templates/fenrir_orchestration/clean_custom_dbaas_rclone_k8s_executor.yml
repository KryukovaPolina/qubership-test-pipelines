|
  webserverSecretKey=''
  fernetKey=''
  executor=KubernetesExecutor;
  ingress='
  enabled: true
  web:
    hosts:
      - web.fenrir-k8s.openshift.sdntest.qubership.org
  flower:
    hosts:
      - flower.fenrir-k8s.openshift.sdntest.qubership.org
  ';
  customPreinstallJob='
  enabled: true
  serviceAccount:
    create: true
  role:
    create: true
    rules:
      - apiGroups:
          - ""
        resources:
          - secrets
        verbs:
          - create
          - get
          - delete
          - update
  command: null
  args:
    - python
    - /bin/create_dbs_dbaas.py
  extraSecrets:
    dbaas-connection-params-preins:
      stringData: |
        DBAAS_HOST: 'http://dbaas-aggregator.dbaas-tls.svc:8080'
        DBAAS_USER: 'cluster-dba'
        DBAAS_PASSWORD: ''
        DBAAS_PG_DB_OWNER: 'airflow'
        DBAAS_PG_BACKUP_DISABLED: 'true'
        DBAAS_PG_MICROSERVICE_NAME: 'airflow'
        DBAAS_REDIS_DB_OWNER: 'airflow'
        DBAAS_REDIS_BACKUP_DISABLED: 'true'
        DBAAS_REDIS_MICROSERVICE_NAME: 'airflowdbaas'
        AIRFLOW_EXECUTOR: 'airflowdbaas'
  extraEnvFrom: |
    - secretRef:
        name: 'dbaas-connection-params-preins'
  ';
  extraSecrets='
  rclone-config:
    stringData: |
      rclone.conf: '{{.Values.rcloneConfig}}'
  dbaas-connection-params-main:
    stringData: |
      DBAAS_HOST: 'http://dbaas-aggregator.dbaas-tls.svc:8080'
      DBAAS_USER: 'cluster-dba'
      DBAAS_PASSWORD: ''
      DBAAS_PG_DB_OWNER: 'airflow'
      DBAAS_PG_BACKUP_DISABLED: 'true'
      DBAAS_PG_MICROSERVICE_NAME: 'airflow'
      DBAAS_REDIS_DB_OWNER: 'airflow'
      DBAAS_REDIS_BACKUP_DISABLED: 'true'
      DBAAS_REDIS_MICROSERVICE_NAME: 'airflowdbaas'
      AIRFLOW_EXECUTOR: 'airflowdbaas'
  ';
  workers='
  enabled: true
  extraVolumes:
    - name: rclone-config
      secret:
        secretName: rclone-config
  replicas: 1
  resources:
    requests:
      cpu: 2000m
      memory: 2Gi
    limits:
      cpu: 2000m
      memory: 2Gi
  ';
  webserver='
  enabled: true
  replicas: 1
  resources:
    requests:
      cpu: 1000m
      memory: 1.5Gi
    limits:
      cpu: 1000m
      memory: 1.5Gi
  defaultUser:
    enabled: true
    role: Admin
    username: admin
    email: admin@example.com
    firstName: admin
    lastName: user
    password: ''
  ';
  ESCAPE_SEQUENCE=true;
  scheduler='
  enabled: true
  replicas: 1
  resources:
    requests:
      cpu: 1000m
      memory: 1Gi
    limits:
      cpu: 1000m
      memory: 1Gi
  extraVolumes:
    - name: rclone-config
      secret:
        secretName: rclone-config
  ';
  flower='
  enabled: false
  ';
  config='
  core:
    dags_folder: /opt/airflow/dags
  api:
    auth_backend: airflow.api.auth.backend.basic_auth
  ';
  dags='
  gitSync:
    enabled: true
    rcloneImage: true
    rev: airflowdags
    securityContexts:
      container:
        capabilities:
          drop:
            - ALL
        allowPrivilegeEscalation: false
    extraVolumeMounts:
      - name: rclone-config
        mountPath: /config/rclone/rclone.conf
        readOnly: true
        subPath: rclone.conf
  ';
  rcloneConfig=[remotesrc]

  type = s3

  provider = Minio

  env_auth = false

  access_key_id = ''

  secret_access_key = ''

  region = eu-central-1

  endpoint = http://minio.qa-kubernetes.openshift.sdntest.qubership.org:80

  location_constraint =

  server_side_encryption =;
  ESCAPE_SEQUENCE=true;
  integrationTests='
    enabled: true
    tags: "smokeNOTpg_connection_dagORairflow_images"
    executorType: KubernetesExecutor
  ';
  statusProvisioner='
    lifetimeAfterCompletion: 60
    integrationTestsTimeout: 3000
  ';
  platformAirflowMonitoring=true;
  serviceMonitor='
    enabled: true
  ';
  prometheusRule='
    enabled: true
  ';
  statsd='
    enabled: true
  ';
  serviceMonitorStatsd='
    enabled: true
  ';
  rbac='
    create: true
  ';