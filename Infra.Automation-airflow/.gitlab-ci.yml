variables:
  PYTHON_IMAGE: pipe_image_latest
  JOB_NAME_CLEAN: ''
  JOB_NAME_UPDATE: ''
  PATCH_SCRIPT: /scripts/external_platform_library_builtIn/patch_ns_restricted.py
  UPGRADE_CRD_SCRIPT: /scripts/external_platform_library_builtIn/upgrade_crd.py
  APPLY_RESOURCES_SCRIPT: /scripts/external_platform_library_builtIn/prepare_restricted_resources.py
  CLEAN_NS_SCRIPT: /scripts/external_platform_library_builtIn/clean_namespace.py
  DEPLOY_SCRIPT: /scripts/external_platform_library_builtIn/deploy\_with\_deployer.py
  REPORT_SCRIPT: /scripts/external_platform_library_builtIn/report.py
  REDIS_NS: redis
  POSTGRES_NS: postgres
  ### ----------------------------------- Cloud specific configuration ----------------------------------- ###
  ### ----------------------------------- ocp_cert_1 configuration --------------------------------------- ###
  #  PREFIX: ocp_cert_1
  #  JENKINS_URL: ''
  #  JENKINS_USER: ''
  #  JENKINS_PASS: ''
  #  CREDS_IN_DEPLOYER: ''
  #  RESTRICTED_USER_APP: ''
  #  CLOUD_HOST_OVERALL: ${OCP_CERT_1_HOST}
  #  CLOUD_TOKEN_OVERALL: ${OCP_CERT_1_TOKEN}
  #  PROJECT: airflow-pipeline
  ### ----------------------------------- fenrir configuration --------------------------------------- ###
  PREFIX: fenrir_orchestration
  JENKINS_URL: ''
  JENKINS_USER: ''
  JENKINS_PASS: ''
  CREDS_IN_DEPLOYER: ''
  RESTRICTED_USER_APP: ''
  CLOUD_HOST_OVERALL: ${FENRIR_KUBER_HOST}
  CLOUD_TOKEN_OVERALL: ${FENRIR_KUBER_TOKEN}
  PROJECT: airflow-pipeline
  ### ----------------------------------- qa_kubernetes configuration ----------------------------------- ###
  # PREFIX: qa_kubernetes_orchestration
  # JENKINS_URL: ''
  # JENKINS_USER: ''
  # JENKINS_PASS: ''
  # CREDS_IN_DEPLOYER: ''
  # RESTRICTED_USER_APP: ''
  # CLOUD_HOST_OVERALL: ${QA_KUBER_HOST}
  # CLOUD_TOKEN_OVERALL: ${QA_KUBER_TOKEN}
  # PROJECT: airflow-pipeline
  ### ----------------------------------------- Manifests ------------------------------------------ ###
  LATEST_SPRINT: ''
  PREVIOUS_SPRINT: ''
  N1_RELEASE: ''
  N2_RELEASE: ''

stages:
  - clean_previous_sprint
  - upgrade_from_previous_to_latest
  - clean_latest_sprint
  - upgrade_to_latest_diff_params
  - clean_n1_release
  - upgrade_from_n1_to_latest
  - clean_n2_release
  - upgrade_from_n2_to_latest
  - clean_previous_sprint_executor
  - upgrade_to_latest_executor
  - clean_latest_sprint_executor
  - clean_latest_sprint_for_update_to_executor
  - update_from_previous_to_latest_executor
  - clean_previous_sprint_restricted
  - update_from_previous_to_latest_restricted
  - clean_latest_sprint_restricted
  - clean_latest_standart_git_sync_ssh
  - update_latest_dbaas_gitsync_connection
  - create_report


default:
  before_script:
    - pip config set global.index-url qubership.org/api/pypi/pypi_python_org.pypi.proxy/simple
    - pip config set global.trusted-host dockerhub.qubership.org
    - python3 -m pip install --upgrade pip
    - pip install --no-cache-dir -r requirements.txt


.update_template: &update_template
  - redis_ns="$REDIS_NS"
  - postgres_ns="$POSTGRES_NS"
  - DB_NAME=$(cat db_name.txt)
  - db_name="$DB_NAME"
  - if ! [ -z $redis_ns ]; then ( sed -i 's,airflow\..[a-z0-9\-]*\.svc,airflow\.'$redis_ns'\.svc,' $TEMPLATE_FILE_NAME ); fi
  - if ! [ -z $postgres_ns ]; then ( sed -i 's,pg\-patroni\..[a-z0-9\-]*\.svc,pg\-patroni\.'$postgres_ns'\.svc,' $TEMPLATE_FILE_NAME ); fi
  - sed -i 's,db\:.[a-z0-9\_\ ]*,db\:\ '$db_name',' $TEMPLATE_FILE_NAME
  - echo "$(<$TEMPLATE_FILE_NAME)"

.create_new_db_name: &create_new_db_name
  - now="$(date +"%y%m%d%H%M%S")"
  - DB_NAME="airflow_regr_$now"
  - echo "$DB_NAME" > db_name.txt
  - echo "$(<db_name.txt)"

.test-case:
  image: ${PYTHON_IMAGE}
  extends: .check_state_logs_script.run
  variables:
    CLOUD_HOST: ${CLOUD_HOST_OVERALL}
    CLOUD_TOKEN: ${CLOUD_TOKEN_OVERALL}
    ARRAY_NS: ${PROJECT}
    ALLOWED_RESTARTS_AMOUNT: 5
    ALLOWED_ERROR_LOGS_AMOUNT: 1000
  tags:
    - ''
  allow_failure: true
  when: on_success
  #when: manual
  artifacts:
    paths:
      - db_name.txt
    expire_in: 1 day
    when: always

include:
  - project: 'PROD.Platform.HA/Infra.Automation'
    ref: pipe_image
    file: 'api2.yaml'

.clear_namespace: &clear_namespace
  - python3 "$CLEAN_NS_SCRIPT" --cloud-token="${CLOUD_TOKEN}" --cloud-host="$CLOUD_HOST" --cloud-namespace="$PROJECT"

1-Clean [PREVIOUS_SPRINT] Minimal Dbaas:
  extends: .test-case
  stage: clean_previous_sprint
  variables:
    TEMPLATE_FILE_NAME: ./templates/${PREFIX}/clean_minimal_dbaas.yml
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "${TEMPLATE_FILE_NAME}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${PREVIOUS_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - !reference [.template_job_status, script]

2-Upgrade From [PREVIOUS_SPRINT] To [LATEST_SPRINT] Dbaas With Git Sync:
  extends: .test-case
  stage: upgrade_from_previous_to_latest
  variables:
    TEMPLATE_FILE_NAME: ./templates/${PREFIX}/clean_custom_dbaas_git_sync.yml
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "${TEMPLATE_FILE_NAME}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - !reference [.template_job_status, script]

3-Clean [LATEST_SPRINT] Dbaas With Git Sync:
  extends: .test-case
  stage: clean_latest_sprint
  variables:
    TEMPLATE_FILE_NAME: ./templates/${PREFIX}/clean_custom_dbaas_git_sync.yml
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "${TEMPLATE_FILE_NAME}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - !reference [.template_job_status, script]

4-Upgrade [LATEST_SPRINT] Diff Params Dbaas With Git Sync:
  extends: .test-case
  stage: upgrade_to_latest_diff_params
  variables:
    TEMPLATE_FILE_NAME: ./templates/${PREFIX}/clean_custom_dbaas_git_sync_updated_resources.yml
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "${TEMPLATE_FILE_NAME}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - !reference [.template_job_status, script]

# Releases
5-Clean [N1_RELEASE]:
  extends: .test-case
  stage: clean_n1_release
  variables:
    TEMPLATE_FILE_NAME: ./templates/${PREFIX}/clean_old_release.yml
  script:
    - python3 ${PATCH_SCRIPT} --cloud-token="${CLOUD_TOKEN}" --cloud-host="${CLOUD_HOST}" --namespace="${PROJECT}" --label="add"
    - *create_new_db_name
    - *update_template
    - python3 "${DEPLOY_SCRIPT}" -f "$TEMPLATE_FILE_NAME" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${N1_RELEASE}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - python3 ${PATCH_SCRIPT} --cloud-token="${CLOUD_TOKEN}" --cloud-host="${CLOUD_HOST}" --namespace="${PROJECT}" --label="remove"
    - !reference [.template_job_status, script]

6-Upgrade From [N1_RELEASE] To [LATEST_SPRINT] Version Standrat And Git Sync:
  extends: .test-case
  stage: upgrade_from_n1_to_latest
  variables:
    TEMPLATE_FILE_NAME: ./templates/${PREFIX}/clean_git_sync_standart.yml
  script:
    - *update_template
    - python3 "${DEPLOY_SCRIPT}" -f "$TEMPLATE_FILE_NAME" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - !reference [.template_job_status, script]

7-Clean [N2_RELEASE]:
  extends: .test-case
  stage: clean_n2_release
  variables:
    TEMPLATE_FILE_NAME: ./templates/${PREFIX}/clean_old_release.yml
  script:
    - python3 ${PATCH_SCRIPT} --cloud-token="${CLOUD_TOKEN}" --cloud-host="${CLOUD_HOST}" --namespace="${PROJECT}" --label="add"
    - *create_new_db_name
    - *update_template
    - python3 "${DEPLOY_SCRIPT}" -f "$TEMPLATE_FILE_NAME" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${N2_RELEASE}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - python3 ${PATCH_SCRIPT} --cloud-token="${CLOUD_TOKEN}" --cloud-host="${CLOUD_HOST}" --namespace="${PROJECT}" --label="remove"

8-Upgrade From [N2_RELEASE] To [LATEST_SPRINT] Standrat And Rclone:
  extends: .test-case
  stage: upgrade_from_n2_to_latest
  variables:
    TEMPLATE_FILE_NAME: ./templates/${PREFIX}/clean_rclone_standart.yml
  script:
    - *update_template
    - python3 "${DEPLOY_SCRIPT}" -f "$TEMPLATE_FILE_NAME" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - !reference [.template_job_status, script]

# Executor
9-Clean [PREVIOUS_SPRINT] With Executor:
  extends: .test-case
  stage: clean_previous_sprint_executor
  variables:
    TEMPLATE_FILE_NAME: ./templates/${PREFIX}/clean_k8s_executor.yml
  script:
    - *create_new_db_name
    - *update_template
    - python3 "${DEPLOY_SCRIPT}" -f "$TEMPLATE_FILE_NAME" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${PREVIOUS_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - !reference [.template_job_status, script]

10-Upgrade From [PREVIOUS_SPRINT] To [LATEST_SPRINT] With Executor:
  extends: .test-case
  stage: upgrade_to_latest_executor
  variables:
    TEMPLATE_FILE_NAME: ./templates/${PREFIX}/clean_k8s_executor.yml
  script:
    - *update_template
    - python3 "${DEPLOY_SCRIPT}" -f "${TEMPLATE_FILE_NAME}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - !reference [.template_job_status, script]

11-Clean [LATEST_SPRINT] With Executor and DBaaS With R-Clone:
  extends: .test-case
  stage: clean_latest_sprint_executor
  variables:
    TEMPLATE_FILE_NAME: ./templates/${PREFIX}/clean_custom_dbaas_rclone_k8s_executor.yml
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "${TEMPLATE_FILE_NAME}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - !reference [.template_job_status, script]

12-Clean [LATEST_SPRINT] With Git Sync For Update To Executor:
  extends: .test-case
  stage: clean_latest_sprint_for_update_to_executor
  variables:
    TEMPLATE_FILE_NAME: ./templates/${PREFIX}/clean_git_sync_standart.yml
  script:
    - *create_new_db_name
    - *update_template
    - python3 "${DEPLOY_SCRIPT}" -f "$TEMPLATE_FILE_NAME" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - !reference [.template_job_status, script]

13-Upgrade To [LATEST_SPRINT] With Executor:
  extends: .test-case
  stage: update_from_previous_to_latest_executor
  variables:
    TEMPLATE_FILE_NAME: ./templates/${PREFIX}/clean_k8s_executor.yml
  script:
    - *update_template
    - python3 "${DEPLOY_SCRIPT}" -f "${TEMPLATE_FILE_NAME}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update" --request-type="post"
    - !reference [.template_job_status, script]

# Restricted
14-Clean [PREVIOUS_SPRINT] Restricted:
  extends: .test-case
  stage: clean_previous_sprint_restricted
  variables:
    TEMPLATE_FILE_NAME: ./templates/${PREFIX}/clean_minimal_dbaas.yml
  script:
    - *clear_namespace
    - python3 "${APPLY_RESOURCES_SCRIPT}" --cloud-host="${CLOUD_HOST}" --cloud-token="${CLOUD_TOKEN}" --namespace="${PROJECT}" --crd-tag="old-tag"
    - python3 "${DEPLOY_SCRIPT}" -f "${TEMPLATE_FILE_NAME}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${RESTRICTED_USER_APP}" --artifact="${PREVIOUS_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - !reference [.template_job_status, script]
  only: { variables: [ $RESTRICTED_USER_APP != "" ] }

15-Upgrade From [PREVIOUS_SPRINT] To [LATEST_SPRINT] Restricted:
  extends: .test-case
  stage: update_from_previous_to_latest_restricted
  variables:
    TEMPLATE_FILE_NAME: ./templates/${PREFIX}/clean_custom_dbaas_git_sync.yml
  script:
    - python3 "${UPGRADE_CRD_SCRIPT}" --cloud-host="${CLOUD_HOST}" --cloud-token="${CLOUD_TOKEN}"
    - python3 "${DEPLOY_SCRIPT}" -f "${TEMPLATE_FILE_NAME}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${RESTRICTED_USER_APP}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - !reference [.template_job_status, script]
  only: { variables: [ $RESTRICTED_USER_APP != "" ] }

16-Clean [LATEST_SPRINT] Restricted:
  extends: .test-case
  stage: clean_latest_sprint_restricted
  variables:
    TEMPLATE_FILE_NAME: ./templates/${PREFIX}/clean_rclone_standart.yml
  script:
    - *create_new_db_name
    - *update_template
    - *clear_namespace
    - python3 "${APPLY_RESOURCES_SCRIPT}" --cloud-host="${CLOUD_HOST}" --cloud-token="${CLOUD_TOKEN}" --namespace="${PROJECT}" --crd-tag="tag"
    - python3 "${DEPLOY_SCRIPT}" -f "${TEMPLATE_FILE_NAME}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${RESTRICTED_USER_APP}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - !reference [.template_job_status, script]
  only: { variables: [ $RESTRICTED_USER_APP != "" ] }

17-Clean [LATEST_SPRINT] With Git Sync And SSH:
  extends: .test-case
  stage: clean_latest_standart_git_sync_ssh
  variables:
    TEMPLATE_FILE_NAME: ./templates/${PREFIX}/clean_standart_git_sync_ssh.yml
  script:
    - *create_new_db_name
    - *update_template
    - python3 "${DEPLOY_SCRIPT}" -f "$TEMPLATE_FILE_NAME" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy" --request-type="post"
    - !reference [.template_job_status, script]

18-Update [LATEST_SPRINT] With Custom Dbaas GitSync And Connection:
  extends: .test-case
  stage: update_latest_dbaas_gitsync_connection
  variables:
    TEMPLATE_FILE_NAME: ./templates/${PREFIX}/clean_custom_dbaas_gitsync_connection.yml
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "${TEMPLATE_FILE_NAME}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update" --request-type="post"
    - !reference [.template_job_status, script]

Report:
  image: ${PYTHON_IMAGE}
  tags:
    - ''
  when: on_success
  stage: create_report
  script:
    - python3 ${REPORT_SCRIPT} --pipeline_id="${CI_PIPELINE_ID}" --token="${GIT_TOKEN}" --webex-room-id="${WEBEX_CI_ROOM_ID}" --webex-token="${WEBEX_CI_TOKEN}" --versions="LATEST_SPRINT=${LATEST_SPRINT}, PREVIOUS_SPRINT=${PREVIOUS_SPRINT}, N1_RELEASE=${N1_RELEASE}, N2_RELEASE=${N2_RELEASE}"
  artifacts:
    paths:
      - "*.html"