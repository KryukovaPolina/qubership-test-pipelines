variables:
  PYTHON_IMAGE: pipe_image_latest
  KUBECTL: /builds/PROD.Platform.HA/Infra.Automation/binary/kubectl
  JOB_NAME_CLEAN: ''
  JOB_NAME_UPDATE: ''
  HOST_GRAYLOG: ***.***.***.***
  GRAYLOG_USER: admin
  GRAYLOG_PASS: admin
  ### ----------------------------------- Cloud specific configuration ----------------------------------- ###
  ### ----------------------------------- ocp_cert_1 configuration --------------------------------------- ###
  # PREFIX: ocp_cert_1
  # JENKINS_URL: ''
  # JENKINS_USER: ''
  # JENKINS_PASS: ''
  # CREDS_IN_DEPLOYER: ''
  # RESTRICTED_USER_APP: ''
  # CLOUD_HOST_OVERALL: ${OCP_CERT_1_HOST}
  # CLOUD_TOKEN_OVERALL: ${OCP_CERT_1_TOKEN}
  # PROJECT: logging-operator
  ### ----------------------------------- qa_kubernetes configuration ----------------------------------- ###
  PREFIX: qa_kubernetes_orchestration
  JENKINS_URL: ''
  JENKINS_USER: ''
  JENKINS_PASS: ''
  CREDS_IN_DEPLOYER: ''
  RESTRICTED_USER_APP: ''
  CLOUD_HOST_OVERALL: ${QA_KUBER_HOST}
  CLOUD_TOKEN_OVERALL: ${QA_KUBER_TOKEN}
  PROJECT: logging-operator
  ### --------------------------------------------- Scripts --------------------------------------------- ###
  DEPLOY_SCRIPT: /scripts/external_platform_library_builtIn/deploy\_with\_deployer.py
  UPGRADE_CRD_SCRIPT: /scripts/external_platform_library_builtIn/upgrade_crd.py
  APPLY_RESOURCES_SCRIPT: ./scripts/prepare_restricted_resources.py
  CLEAN_NS_SCRIPT: /scripts/external_platform_library_builtIn/clean_namespace.py
  PATCH_NS: /scripts/external_platform_library_builtIn/patch_ns_restricted.py
  REPORT_SCRIPT: /scripts/external_platform_library_builtIn/report.py
  ### ------------------------------------------- Manifests --------------------------------------------- ###
  # Manifests Graylog 5
  N2_RELEASE: ''
  N1_RELEASE: ''
  PREVIOUS_SPRINT: ''
  LATEST_SPRINT: ''
  # Scheme for testing: graylog_fluentd, graylog_fluentbit, only_fluentd, fluentbit, ha; graylog_5
  SCHEME_GRAYLOG_FLUENTD: "true"
  SCHEME_GRAYLOG_FLUENTBIT: "true"
  SCHEME_ONLY_FLUENTD: "true"
  SCHEME_ONLY_FLUENTBIT: "true"
  SCHEME_HA: "true"
  # Restricted
  LATEST_SPRINT_TAG: ''
  PREVIOUS_SPRINT_TAG: ''

stages:
   - gr_fld_clean_previous_sprint
   - gr_fld_update_to_latest
   - gr_fld_clean_latest
   - gr_fld_upgrade_latest_diff_params
   - gr_fld_clean_n1_release
   - gr_fld_upgrade_from_n1_to_latest_sprint
   - gr_fld_clean_n2_release
   - gr_fld_upgrade_from_n2_to_latest_sprint
   - gr_fld_clean_previous_sprint_restricted
   - gr_fld_update_to_latest_restricted
   - gr_fld_clean_latest_sprint_restricted
   - gr_flb_clean_previous_sprint
   - gr_flb_update_to_latest
   - gr_flb_clean_latest
   - gr_flb_upgrade_latest_diff_params
   - gr_flb_clean_n1_release
   - gr_flb_upgrade_from_n1_to_latest_sprint
   - gr_flb_clean_n2_release
   - gr_flb_upgrade_from_n2_to_latest_sprint
   - gr_flb_clean_previous_sprint_restricted
   - gr_flb_update_to_latest_restricted
   - gr_flb_clean_latest_sprint_restricted
   - fld_clean_previous_sprint
   - fld_update_to_latest
   - fld_clean_latest
   - fld_upgrade_latest_diff_params
   - fld_clean_n1_release
   - fld_upgrade_from_n1_to_latest_sprint
   - fld_clean_n2_release
   - fld_upgrade_from_n2_to_latest_sprint
   - fld_clean_previous_sprint_restricted
   - fld_update_to_latest_restricted
   - fld_clean_latest_sprint_restricted
   - flb_clean_previous_sprint
   - flb_update_to_latest
   - flb_clean_latest
   - flb_upgrade_latest_diff_params
   - flb_clean_n1_release
   - flb_upgrade_from_n1_to_latest_sprint
   - flb_clean_n2_release
   - flb_upgrade_from_n2_to_latest_sprint
   - flb_clean_previous_sprint_restricted
   - flb_update_to_latest_restricted
   - flb_clean_latest_sprint_restricted
   - ha_clean_n2_release
   - ha_upgrade_from_n2_to_latest_sprint
   - ha_clean_n1_release
   - ha_upgrade_from_n1_to_latest_sprint
   - ha_clean_previous_sprint
   - ha_update_to_latest 
   - ha_clean_latest
   - gr_clean_latest_tls
   - create_report
   
default:
  before_script:
    - pip config set global.index-url qubership.org/api/pypi/pd.sandbox-staging.pypi.group/simple/
    - pip config set global.trusted-host dockerhub.qubership.org
    - python3 -m pip install --upgrade pip
    - pip install --no-cache-dir -r requirements.txt
    - |
      if [[ "$PREFIX" == "qa_kubernetes_orchestration" ]]; then
        export KUBECONFIG=$QA_KUBER_KUBECONFIG;
      elif [[ "$PREFIX" == "ocp_cert_1" ]]; then
        export KUBECONFIG=$OCP_CERT_1_KUBECONFIG;
      else
        echo "None configuration for specified prefix $PREFIX";
        exit 5;
      fi
    - chmod +x $KUBECTL
    - echo "$KUBECONFIG" > kubeconfig.env
    - export KUBECONFIG=/builds/PROD.Platform.HA/Infra.Automation/kubeconfig.env

.test-case: &test-case
  image: ${PYTHON_IMAGE}
  extends: .check_state_logs_script.run
  variables:
    CLOUD_HOST: ${CLOUD_HOST_OVERALL}
    CLOUD_TOKEN: ${CLOUD_TOKEN_OVERALL}
    ARRAY_NS: ${PROJECT}
    ALLOWED_RESTARTS_AMOUNT: 4
    ALLOWED_ERROR_LOGS_AMOUNT: 25000
  tags:
    - ''
  allow_failure: true
  when: on_success
  #when: manual

.clean_ns: &clean_ns
  - python3 "${CLEAN_NS_SCRIPT}" --cloud-token="${CLOUD_TOKEN}" --cloud-host="${CLOUD_HOST}" --cloud-namespace="${PROJECT}" --pv-list="" --cr-list="loggingservices"
  - python3 "${PATCH_NS}" --cloud-token="${CLOUD_TOKEN}" --cloud-host="${CLOUD_HOST}" --namespace="${PROJECT}" --label="add" --label-value="privileged"
  - chmod +x ./scripts/clean_vm_objects.sh
  - ./scripts/clean_vm_objects.sh
  - apk add curl
  - curl --insecure -XDELETE -u admin:admin https://opensearch-cloud-service.qa-kubernetes.openshift.sdntest.qubership.org/g*

.check_tests_result: &check_tests_result
  - python3 /scripts/external_platform_library_builtIn/validate_tests_result.py --cloud-host="${CLOUD_HOST}" --cloud-token="${CLOUD_TOKEN}" --namespace="${PROJECT}" --timeout="1800"

include:
  - project: 'PROD.Platform.HA/Infra.Automation'
    ref: pipe_image
    file: 'api2.yaml'

# ----- Basic Internal Graylog With Fluentd ----- #
1-Graylog Fluentd Clean [PREVIOUS_SPRINT]:
  <<: *test-case
  stage: gr_fld_clean_previous_sprint
  script:
    - *clean_ns
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/graylog/graylog-fluentd_install_kubernetes.yaml"  --artifact="${PREVIOUS_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
  only: { variables: [ $SCHEME_GRAYLOG_FLUENTD == "true" ] }

2-Graylog Fluentd Upgrade From [PREVIOUS_SPRINT] To [LATEST_SPRINT]:
  <<: *test-case
  stage: gr_fld_update_to_latest
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/graylog/graylog-fluentd_upgrade_kubernetes.yaml" --artifact="${LATEST_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - sleep 120
    - *check_tests_result
    - !reference [.template_job_status, script]
  only: { variables: [ $SCHEME_GRAYLOG_FLUENTD == "true" ] }

3-Graylog Fluentd Clean [LATEST_SPRINT]:
  <<: *test-case
  stage: gr_fld_clean_latest
  script:
    - *clean_ns
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/graylog/graylog-fluentd_install_kubernetes.yaml"  --artifact="${LATEST_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - *check_tests_result
    - !reference [.template_job_status, script]
  only: { variables: [ $SCHEME_GRAYLOG_FLUENTD == "true" ] }

4-Graylog Fluentd Upgrade [LATEST_SPRINT] Diff Params:
  <<: *test-case
  stage: gr_fld_upgrade_latest_diff_params
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/graylog/graylog-fluentd_upgrade_kubernetes.yaml" --artifact="${LATEST_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - !reference [.template_job_status, script]
  only: { variables: [ $SCHEME_GRAYLOG_FLUENTD == "true" ] }

# Releases Graylog With Fluentd
5-Graylog Fluentd Clean [N1_RELEASE]:
  <<: *test-case
  stage: gr_fld_clean_n1_release
  script:
    - *clean_ns
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/graylog/graylog-fluentd_install_kubernetes.yaml"  --artifact="${N1_RELEASE}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
  only: { variables: [ $SCHEME_GRAYLOG_FLUENTD == "true" ] }

6-Graylog Fluentd Upgrade From [N1_RELEASE] To [LATEST_SPRINT]:
  <<: *test-case
  stage: gr_fld_upgrade_from_n1_to_latest_sprint
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/graylog/graylog-fluentd_upgrade_kubernetes.yaml" --artifact="${LATEST_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - sleep 120
    - *check_tests_result
    - !reference [.template_job_status, script]
  only: { variables: [ $SCHEME_GRAYLOG_FLUENTD == "true" ] }

7-Graylog Fluentd Clean [N2_RELEASE]:
  <<: *test-case
  stage: gr_fld_clean_n2_release
  script:
    - *clean_ns
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/graylog/graylog-fluentd_install_kubernetes.yaml"  --artifact="${N2_RELEASE}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
  only: { variables: [ $SCHEME_GRAYLOG_FLUENTD == "true" ] }

8-Graylog Fluentd Upgrade From [N2_RELEASE] To [LATEST_SPRINT]:
  <<: *test-case
  stage: gr_fld_upgrade_from_n2_to_latest_sprint
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/graylog/graylog-fluentd_upgrade_kubernetes.yaml" --artifact="${LATEST_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - sleep 120
    - *check_tests_result
    - !reference [.template_job_status, script]
  only: { variables: [ $SCHEME_GRAYLOG_FLUENTD == "true" ] }

# Restricted Graylog With Fluentd
9-Graylog Fluentd Clean [PREVIOUS_SPRINT] Restricted:
  <<: *test-case
  stage: gr_fld_clean_previous_sprint_restricted
  script:
    - *clean_ns
    - python3 "${APPLY_RESOURCES_SCRIPT}" --cloud-host="${CLOUD_HOST}" --cloud-token="${CLOUD_TOKEN}" --namespace="${PROJECT}" --crd-tag="${PREVIOUS_SPRINT_TAG}"
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/graylog/graylog-fluentd_install_kubernetes_restricted.yaml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${RESTRICTED_USER_APP}" --artifact="${PREVIOUS_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
  only: { variables: [ $SCHEME_GRAYLOG_FLUENTD == "true" ] }

10-Graylog Fluentd Upgrade From [PREVIOUS_SPRINT] To [LATEST_SPRINT] Restricted:
  <<: *test-case
  stage: gr_fld_update_to_latest_restricted
  script:
    - python3 "${UPGRADE_CRD_SCRIPT}" --cloud-host="${CLOUD_HOST}" --cloud-token="${CLOUD_TOKEN}"
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/graylog/graylog-fluentd_upgrade_kubernetes_restricted.yaml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${RESTRICTED_USER_APP}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - sleep 120
    - *check_tests_result
    - !reference [.template_job_status, script]
  only: { variables: [ $SCHEME_GRAYLOG_FLUENTD == "true" ] }

11-Graylog Fluentd Clean [LATEST_SPRINT] Restricted:
  <<: *test-case
  stage: gr_fld_clean_latest_sprint_restricted
  script:
    - *clean_ns
    - python3 "${APPLY_RESOURCES_SCRIPT}" --cloud-host="${CLOUD_HOST}" --cloud-token="${CLOUD_TOKEN}" --namespace="${PROJECT}" --crd-tag="${LATEST_SPRINT_TAG}"
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/graylog/graylog-fluentd_install_kubernetes_restricted.yaml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${RESTRICTED_USER_APP}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - *check_tests_result
    - !reference [.template_job_status, script]
  only: { variables: [ $SCHEME_GRAYLOG_FLUENTD == "true" ] }


# ----- Basic Internal Graylog With Fluentbit ----- #
12-Graylog Fluentbit Clean [PREVIOUS_SPRINT]:
  <<: *test-case
  stage: gr_flb_clean_previous_sprint
  script:
    - *clean_ns
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/graylog/graylog-fluentbit_install_kubernetes.yaml"  --artifact="${PREVIOUS_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
  only: { variables: [ $SCHEME_GRAYLOG_FLUENTBIT == "true" ] }

13-Graylog Fluentbit Upgrade From [PREVIOUS_SPRINT] To [LATEST_SPRINT]:
  <<: *test-case
  stage: gr_flb_update_to_latest
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/graylog/graylog-fluentbit_upgrade_kubernetes.yaml" --artifact="${LATEST_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - sleep 120
    - *check_tests_result
    - !reference [.template_job_status, script]
  only: { variables: [ $SCHEME_GRAYLOG_FLUENTBIT == "true" ] }

14-Graylog Fluentbit Clean [LATEST_SPRINT]:
  <<: *test-case
  stage: gr_flb_clean_latest
  script:
    - *clean_ns
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/graylog/graylog-fluentbit_install_kubernetes.yaml"  --artifact="${LATEST_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - *check_tests_result
    - !reference [.template_job_status, script]
  only: { variables: [ $SCHEME_GRAYLOG_FLUENTBIT == "true" ] }

15-Graylog Fluentbit Upgrade [LATEST_SPRINT] Diff Params:
  <<: *test-case
  stage: gr_flb_upgrade_latest_diff_params
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/graylog/graylog-fluentbit_upgrade_kubernetes.yaml" --artifact="${LATEST_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - !reference [.template_job_status, script]
  only: { variables: [ $SCHEME_GRAYLOG_FLUENTBIT == "true" ] }

# Releases Graylog With Fluentbit
16-Graylog Fluentbit Clean [N1_RELEASE]:
  <<: *test-case
  stage: gr_flb_clean_n1_release
  script:
    - *clean_ns
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/graylog/graylog-fluentbit_install_kubernetes.yaml"  --artifact="${N1_RELEASE}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
  only: { variables: [ $SCHEME_GRAYLOG_FLUENTBIT == "true" ] }

17-Graylog Fluentbit Upgrade From [N1_RELEASE] To [LATEST_SPRINT]:
  <<: *test-case
  stage: gr_flb_upgrade_from_n1_to_latest_sprint
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/graylog/graylog-fluentbit_upgrade_kubernetes.yaml" --artifact="${LATEST_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - sleep 120
    - *check_tests_result
    - !reference [.template_job_status, script]
  only: { variables: [ $SCHEME_GRAYLOG_FLUENTBIT == "true" ] }

18-Graylog Fluentbit Clean [N2_RELEASE]:
  <<: *test-case
  stage: gr_flb_clean_n2_release
  script:
    - *clean_ns
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/graylog/graylog-fluentbit_install_kubernetes.yaml"  --artifact="${N2_RELEASE}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
  only: { variables: [ $SCHEME_GRAYLOG_FLUENTBIT == "true" ] }

19-Graylog Fluentbit Upgrade From [N2_RELEASE] To [LATEST_SPRINT]:
  <<: *test-case
  stage: gr_flb_upgrade_from_n2_to_latest_sprint
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/graylog/graylog-fluentbit_upgrade_kubernetes.yaml" --artifact="${LATEST_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - sleep 120
    - *check_tests_result
    - !reference [.template_job_status, script]
  only: { variables: [ $SCHEME_GRAYLOG_FLUENTBIT == "true" ] }

# Restricted Graylog With Fluentbit
20-Graylog Fluentbit Restricted Clean [PREVIOUS_SPRINT]:
  <<: *test-case
  stage: gr_flb_clean_previous_sprint_restricted
  script:
    - *clean_ns
    - python3 "${APPLY_RESOURCES_SCRIPT}" --cloud-host="${CLOUD_HOST}" --cloud-token="${CLOUD_TOKEN}" --namespace="${PROJECT}" --crd-tag="${PREVIOUS_SPRINT_TAG}"
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/graylog/graylog-fluentbit_install_kubernetes_restricted.yaml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${RESTRICTED_USER_APP}" --artifact="${PREVIOUS_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
  only: { variables: [ $SCHEME_GRAYLOG_FLUENTBIT == "true" ] }

21-Graylog Fluentbit Upgrade From [PREVIOUS_SPRINT] To [LATEST_SPRINT] Restricted:
  <<: *test-case
  stage: gr_flb_update_to_latest_restricted
  script:
    - python3 "${UPGRADE_CRD_SCRIPT}" --cloud-host="${CLOUD_HOST}" --cloud-token="${CLOUD_TOKEN}"
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/graylog/graylog-fluentbit_upgrade_kubernetes_restricted.yaml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${RESTRICTED_USER_APP}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - sleep 120
    - *check_tests_result
    - !reference [.template_job_status, script]
  only: { variables: [ $SCHEME_GRAYLOG_FLUENTBIT == "true" ] }

22-Graylog Fluentbit Clean [LATEST_SPRINT] Restricted:
  <<: *test-case
  stage: gr_flb_clean_latest_sprint_restricted
  script:
    - *clean_ns
    - python3 "${APPLY_RESOURCES_SCRIPT}" --cloud-host="${CLOUD_HOST}" --cloud-token="${CLOUD_TOKEN}" --namespace="${PROJECT}" --crd-tag="${LATEST_SPRINT_TAG}"
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/graylog/graylog-fluentbit_install_kubernetes_restricted.yaml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${RESTRICTED_USER_APP}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - *check_tests_result
    - !reference [.template_job_status, script]
  only: { variables: [ $SCHEME_GRAYLOG_FLUENTBIT == "true" ] }


# ----- Basic Only Fluentd ----- #
23-Only Fluentd Clean [PREVIOUS_SPRINT]:
  <<: *test-case
  stage: fld_clean_previous_sprint
  script:
    - *clean_ns
    - host="${HOST_GRAYLOG}"
    - sed -i 's,graylogHost:\ <graylog_host>,graylogHost:\ '$host',' ./templates/${PREFIX}/fluentd/fluentd_kubernetes_smoke.yaml
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/fluentd/fluentd_kubernetes_smoke.yaml"  --artifact="${PREVIOUS_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
  only: { variables: [ $SCHEME_ONLY_FLUENTD == "true" ] }

24-Only Fluentd Upgrade From [PREVIOUS_SPRINT] To [LATEST_SPRINT]:
  <<: *test-case
  stage: fld_update_to_latest
  script:
    - host="${HOST_GRAYLOG}"
    - sed -i 's,graylogHost:\ <graylog_host>,graylogHost:\ '$host',' ./templates/${PREFIX}/fluentd/fluentd_kubernetes.yaml
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/fluentd/fluentd_kubernetes.yaml" --artifact="${LATEST_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - *check_tests_result
    - !reference [.template_job_status, script]
  only: { variables: [ $SCHEME_ONLY_FLUENTD == "true" ] }

25-Only Fluentd Clean [LATEST_SPRINT]:
  <<: *test-case
  stage: fld_clean_latest
  script:
    - *clean_ns
    - host="${HOST_GRAYLOG}"
    - sed -i 's,graylogHost:\ <graylog_host>,graylogHost:\ '$host',' ./templates/${PREFIX}/fluentd/fluentd_kubernetes.yaml
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/fluentd/fluentd_kubernetes.yaml"  --artifact="${LATEST_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - *check_tests_result
    - !reference [.template_job_status, script]
  only: { variables: [ $SCHEME_ONLY_FLUENTD == "true" ] }

# Releases Only Fluentd
26-Only Fluentd Clean [N1_RELEASE]:
  <<: *test-case
  stage: fld_clean_n1_release
  script:
    - *clean_ns
    - host="${HOST_GRAYLOG}"
    - sed -i 's,graylogHost:\ <graylog_host>,graylogHost:\ '$host',' ./templates/${PREFIX}/fluentd/fluentd_kubernetes_smoke.yaml
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/fluentd/fluentd_kubernetes_smoke.yaml"  --artifact="${N1_RELEASE}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
  only: { variables: [ $SCHEME_ONLY_FLUENTD == "true" ] }

27-Only Fluentd Upgrade From [N1_RELEASE] To [LATEST_SPRINT]:
  <<: *test-case
  stage: fld_upgrade_from_n1_to_latest_sprint
  script:
    - host="${HOST_GRAYLOG}"
    - sed -i 's,graylogHost:\ <graylog_host>,graylogHost:\ '$host',' ./templates/${PREFIX}/fluentd/fluentd_kubernetes.yaml
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/fluentd/fluentd_kubernetes.yaml" --artifact="${LATEST_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - *check_tests_result
    - !reference [.template_job_status, script]
  only: { variables: [ $SCHEME_ONLY_FLUENTD == "true" ] }

28-Only Fluentd Clean [N2_RELEASE]:
  <<: *test-case
  stage: fld_clean_n2_release
  script:
    - *clean_ns
    - host="${HOST_GRAYLOG}"
    - sed -i 's,graylogHost:\ <graylog_host>,graylogHost:\ '$host',' ./templates/${PREFIX}/fluentd/fluentd_kubernetes_smoke.yaml
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/fluentd/fluentd_kubernetes_smoke.yaml"  --artifact="${N2_RELEASE}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
  only: { variables: [ $SCHEME_ONLY_FLUENTD == "true" ] }

29-Only Fluentd Upgrade From [N2_RELEASE] To [LATEST_SPRINT]:
  <<: *test-case
  stage: fld_upgrade_from_n2_to_latest_sprint
  script:
    - host="${HOST_GRAYLOG}"
    - sed -i 's,graylogHost:\ <graylog_host>,graylogHost:\ '$host',' ./templates/${PREFIX}/fluentd/fluentd_kubernetes.yaml
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/fluentd/fluentd_kubernetes.yaml" --artifact="${LATEST_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - *check_tests_result
    - !reference [.template_job_status, script]
  only: { variables: [ $SCHEME_ONLY_FLUENTD == "true" ] }

# Restricted Only Fluentd
30-Only Fluentd Restricted Clean [PREVIOUS_SPRINT]:
  <<: *test-case
  stage: fld_clean_previous_sprint_restricted
  script:
    - *clean_ns
    - host="${HOST_GRAYLOG}"
    - sed -i 's,graylogHost:\ <graylog_host>,graylogHost:\ '$host',' ./templates/${PREFIX}/fluentd/fluentd_kubernetes_restricted.yaml
    - python3 "${APPLY_RESOURCES_SCRIPT}" --cloud-host="${CLOUD_HOST}" --cloud-token="${CLOUD_TOKEN}" --namespace="${PROJECT}" --crd-tag="${PREVIOUS_SPRINT_TAG}"
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/fluentd/fluentd_kubernetes_restricted.yaml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${RESTRICTED_USER_APP}" --artifact="${PREVIOUS_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
  only: { variables: [ $SCHEME_ONLY_FLUENTD == "true" ] }

31-Only Fluentd Upgrade From [PREVIOUS_SPRINT] To [LATEST_SPRINT] Restricted:
  <<: *test-case
  stage: fld_update_to_latest_restricted
  script:
    - python3 "${UPGRADE_CRD_SCRIPT}" --cloud-host="${CLOUD_HOST}" --cloud-token="${CLOUD_TOKEN}"
    - host="${HOST_GRAYLOG}"
    - sed -i 's,graylogHost:\ <graylog_host>,graylogHost:\ '$host',' ./templates/${PREFIX}/fluentd/fluentd_kubernetes_restricted.yaml
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/fluentd/fluentd_kubernetes_restricted.yaml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${RESTRICTED_USER_APP}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - *check_tests_result
    - !reference [.template_job_status, script]
  only: { variables: [ $SCHEME_ONLY_FLUENTD == "true" ] }

32-Only Fluentd Clean [LATEST_SPRINT] Restricted:
  <<: *test-case
  stage: fld_clean_latest_sprint_restricted
  script:
    - *clean_ns
    - host="${HOST_GRAYLOG}"
    - sed -i 's,graylogHost:\ <graylog_host>,graylogHost:\ '$host',' ./templates/${PREFIX}/fluentd/fluentd_kubernetes_restricted.yaml
    - python3 "${APPLY_RESOURCES_SCRIPT}" --cloud-host="${CLOUD_HOST}" --cloud-token="${CLOUD_TOKEN}" --namespace="${PROJECT}" --crd-tag="${LATEST_SPRINT_TAG}"
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/fluentd/fluentd_kubernetes_restricted.yaml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${RESTRICTED_USER_APP}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - *check_tests_result
    - !reference [.template_job_status, script]
  only: { variables: [ $SCHEME_ONLY_FLUENTD == "true" ] }



# ----- Basic Only Fluentbit ----- #
33-Only Fluentbit Clean [PREVIOUS_SPRINT]:
  <<: *test-case
  stage: flb_clean_previous_sprint
  script:
    - *clean_ns
    - host="${HOST_GRAYLOG}"
    - sed -i 's,graylogHost:\ <graylog_host>,graylogHost:\ '$host',' ./templates/${PREFIX}/fluentbit/fluentbit_kubernetes_smoke.yaml
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/fluentbit/fluentbit_kubernetes_smoke.yaml"  --artifact="${PREVIOUS_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
  only: { variables: [ $SCHEME_ONLY_FLUENTBIT == "true" ] }

34-Only Fluentbit Upgrade From [PREVIOUS_SPRINT] To [LATEST_SPRINT]:
  <<: *test-case
  stage: flb_update_to_latest
  script:
    - host="${HOST_GRAYLOG}"
    - sed -i 's,graylogHost:\ <graylog_host>,graylogHost:\ '$host',' ./templates/${PREFIX}/fluentbit/fluentbit_kubernetes.yaml
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/fluentbit/fluentbit_kubernetes.yaml" --artifact="${LATEST_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - *check_tests_result
    - !reference [.template_job_status, script]
  only: { variables: [ $SCHEME_ONLY_FLUENTBIT == "true" ] }

35-Only Fluentbit Clean [LATEST_SPRINT]:
  <<: *test-case
  stage: flb_clean_latest
  script:
    - *clean_ns
    - host="${HOST_GRAYLOG}"
    - sed -i 's,graylogHost:\ <graylog_host>,graylogHost:\ '$host',' ./templates/${PREFIX}/fluentbit/fluentbit_kubernetes.yaml
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/fluentbit/fluentbit_kubernetes.yaml"  --artifact="${LATEST_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - *check_tests_result
    - !reference [.template_job_status, script]
  only: { variables: [ $SCHEME_ONLY_FLUENTBIT == "true" ] }

# Releases Only Fluentbit
36-Only Fluentbit Clean [N1_RELEASE]:
  <<: *test-case
  stage: flb_clean_n1_release
  script:
    - *clean_ns
    - host="${HOST_GRAYLOG}"
    - sed -i 's,graylogHost:\ <graylog_host>,graylogHost:\ '$host',' ./templates/${PREFIX}/fluentbit/fluentbit_kubernetes_smoke.yaml
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/fluentbit/fluentbit_kubernetes_smoke.yaml"  --artifact="${N1_RELEASE}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
  only: { variables: [ $SCHEME_ONLY_FLUENTBIT == "true" ] }

37-Only Fluentbit Upgrade From [N1_RELEASE] To [LATEST_SPRINT]:
  <<: *test-case
  stage: flb_upgrade_from_n1_to_latest_sprint
  script:
    - host="${HOST_GRAYLOG}"
    - sed -i 's,graylogHost:\ <graylog_host>,graylogHost:\ '$host',' ./templates/${PREFIX}/fluentbit/fluentbit_kubernetes.yaml
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/fluentbit/fluentbit_kubernetes.yaml" --artifact="${LATEST_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - *check_tests_result
    - !reference [.template_job_status, script]
  only: { variables: [ $SCHEME_ONLY_FLUENTBIT == "true" ] }

38-Only Fluentbit Clean [N2_RELEASE]:
  <<: *test-case
  stage: flb_clean_n2_release
  script:
    - *clean_ns
    - host="${HOST_GRAYLOG}"
    - sed -i 's,graylogHost:\ <graylog_host>,graylogHost:\ '$host',' ./templates/${PREFIX}/fluentbit/fluentbit_kubernetes_smoke.yaml
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/fluentbit/fluentbit_kubernetes_smoke.yaml"  --artifact="${N2_RELEASE}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
  only: { variables: [ $SCHEME_ONLY_FLUENTBIT == "true" ] }

39-Only Fluentbit Upgrade From [N2_RELEASE] To [LATEST_SPRINT]:
  <<: *test-case
  stage: flb_upgrade_from_n2_to_latest_sprint
  script:
    - host="${HOST_GRAYLOG}"
    - sed -i 's,graylogHost:\ <graylog_host>,graylogHost:\ '$host',' ./templates/${PREFIX}/fluentbit/fluentbit_kubernetes.yaml
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/fluentbit/fluentbit_kubernetes.yaml" --artifact="${LATEST_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - *check_tests_result
    - !reference [.template_job_status, script]
  only: { variables: [ $SCHEME_ONLY_FLUENTBIT == "true" ] }

# Restricted Only Fluentbit
40-Only Fluentbit Restricted Clean [PREVIOUS_SPRINT]:
  <<: *test-case
  stage: flb_clean_previous_sprint_restricted
  script:
    - *clean_ns
    - host="${HOST_GRAYLOG}"
    - sed -i 's,graylogHost:\ <graylog_host>,graylogHost:\ '$host',' ./templates/${PREFIX}/fluentbit/fluentbit_kubernetes_restricted.yaml
    - python3 "${APPLY_RESOURCES_SCRIPT}" --cloud-host="${CLOUD_HOST}" --cloud-token="${CLOUD_TOKEN}" --namespace="${PROJECT}" --crd-tag="${PREVIOUS_SPRINT_TAG}"
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/fluentbit/fluentbit_kubernetes_restricted.yaml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${RESTRICTED_USER_APP}" --artifact="${PREVIOUS_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
  only: { variables: [ $SCHEME_ONLY_FLUENTBIT == "true" ] }

41-Only Fluentbit Upgrade From [PREVIOUS_SPRINT] To [LATEST_SPRINT] Restricted:
  <<: *test-case
  stage: flb_update_to_latest_restricted
  script:
    - python3 "${UPGRADE_CRD_SCRIPT}" --cloud-host="${CLOUD_HOST}" --cloud-token="${CLOUD_TOKEN}"
    - host="${HOST_GRAYLOG}"
    - sed -i 's,graylogHost:\ <graylog_host>,graylogHost:\ '$host',' ./templates/${PREFIX}/fluentbit/fluentbit_kubernetes_restricted.yaml
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/fluentbit/fluentbit_kubernetes_restricted.yaml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${RESTRICTED_USER_APP}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - *check_tests_result
    - !reference [.template_job_status, script]
  only: { variables: [ $SCHEME_ONLY_FLUENTBIT == "true" ] }

42-Only Fluentbit Clean [LATEST_SPRINT] Restricted:
  <<: *test-case
  stage: flb_clean_latest_sprint_restricted
  script:
    - *clean_ns
    - host="${HOST_GRAYLOG}"
    - sed -i 's,graylogHost:\ <graylog_host>,graylogHost:\ '$host',' ./templates/${PREFIX}/fluentbit/fluentbit_kubernetes_restricted.yaml
    - python3 "${APPLY_RESOURCES_SCRIPT}" --cloud-host="${CLOUD_HOST}" --cloud-token="${CLOUD_TOKEN}" --namespace="${PROJECT}" --crd-tag="${LATEST_SPRINT_TAG}"
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/fluentbit/fluentbit_kubernetes_restricted.yaml" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${RESTRICTED_USER_APP}" --artifact="${LATEST_SPRINT}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - *check_tests_result
    - !reference [.template_job_status, script]
  only: { variables: [ $SCHEME_ONLY_FLUENTBIT == "true" ] }

# ----- HA Scheme ----- #

43-Ha Scheme Clean [N2_RELEASE]:
  <<: *test-case
  stage: ha_clean_n2_release
  script:
    - *clean_ns
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/ha-scheme/ha-scheme_install_kubernetes.yaml"  --artifact="${N2_RELEASE}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
  only: { variables: [ $SCHEME_HA == "true" ] }

44-Ha Scheme Upgrade From [N2_RELEASE] To [LATEST_SPRINT]:
  <<: *test-case
  stage: ha_upgrade_from_n2_to_latest_sprint
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/ha-scheme/ha-scheme_upgrade_kubernetes.yaml" --artifact="${LATEST_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - *check_tests_result
    - !reference [.template_job_status, script]
  only: { variables: [ $SCHEME_HA == "true" ] }

45-Ha SchemeClean [N1_RELEASE]:
  <<: *test-case
  stage: ha_clean_n1_release
  script:
    - *clean_ns
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/ha-scheme/ha-scheme_install_kubernetes.yaml"  --artifact="${N1_RELEASE}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
  only: { variables: [ $SCHEME_HA == "true" ] }

46-Ha SchemeUpgrade From [N1_RELEASE] To [LATEST_SPRINT]:
  <<: *test-case
  stage: ha_upgrade_from_n1_to_latest_sprint
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/ha-scheme/ha-scheme_upgrade_kubernetes.yaml" --artifact="${LATEST_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - *check_tests_result
    - !reference [.template_job_status, script]
  only: { variables: [ $SCHEME_HA == "true" ] }

47-Ha Scheme Clean [PREVIOUS_SPRINT]:
  <<: *test-case
  stage: ha_clean_previous_sprint
  script:
    - *clean_ns
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/ha-scheme/ha-scheme_install_kubernetes.yaml"  --artifact="${PREVIOUS_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
  only: { variables: [ $SCHEME_HA == "true" ] }

48-Ha Scheme Upgrade From [PREVIOUS_SPRINT] To [LATEST_SPRINT]:
  <<: *test-case
  stage: ha_update_to_latest
  script:
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/ha-scheme/ha-scheme_upgrade_kubernetes.yaml" --artifact="${LATEST_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_UPDATE}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Rolling Update"
    - *check_tests_result
    - !reference [.template_job_status, script]
  only: { variables: [ $SCHEME_HA == "true" ] }

49-Ha Scheme Clean [LATEST_SPRINT]:
  <<: *test-case
  stage: ha_clean_latest
  script:
   - *clean_ns
   - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/ha-scheme/ha-scheme_install_kubernetes.yaml"  --artifact="${LATEST_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
   - *check_tests_result
   - !reference [.template_job_status, script]
  only: { variables: [ $SCHEME_HA == "true" ] }

50-Graylog Clean [LATEST_SPRINT] TLS:
  <<: *test-case
  stage: gr_clean_latest_tls
  script:
    - *clean_ns
    - python3 "${DEPLOY_SCRIPT}" -f "./templates/${PREFIX}/graylog/graylog-tls_install_kubernetes.yaml" --artifact="${LATEST_SPRINT}" --jenkins-user="${JENKINS_USER}" --jenkins-pass="${JENKINS_PASS}" --job-name="${JOB_NAME_CLEAN}" --jenkins-url="${JENKINS_URL}" --os-creds="${CREDS_IN_DEPLOYER}" --project="${PREFIX}-${PROJECT}" --deploy-mode="Clean Deploy"
    - *check_tests_result
    - !reference [.template_job_status, script]
  only: { variables: [ $SCHEME_GRAYLOG_FLUENTD == "true" ] }

Report:
  image: ${PYTHON_IMAGE}
  tags:
    - ''
  when: on_success
  stage: create_report
  script:
    - python3 ${REPORT_SCRIPT} --pipeline_id="${CI_PIPELINE_ID}" --token="${GIT_TOKEN}" --webex-room-id="${WEBEX_CI_ROOM_ID}" --webex-token="${WEBEX_CI_TOKEN}" --versions="LATEST_SPRINT=${LATEST_SPRINT}, PREVIOUS_SPRINT=${PREVIOUS_SPRINT},N1_RELEASE=${N1_RELEASE},N2_RELEASE=${N2_RELEASE},LATEST_SPRINT_TAG=${LATEST_SPRINT_TAG},PREVIOUS_SPRINT_TAG=${PREVIOUS_SPRINT_TAG}"
  artifacts:
    paths:
      - "*.html"

